{"version":3,"file":"request.js","sources":["request/request.js"],"sourcesContent":["import {\r\n\tSERVERTAPI\r\n} from \"../config\";\r\n\r\nexport const request = (options = {}) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst token = uni.getStorageSync('token'); // 假设 token 存储在本地存储中\r\n\r\n\t\tconst header = {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...options.header,\r\n\t\t};\r\n\r\n\t\tif (token) {\r\n\t\t\theader['Authorization'] = `Bearer ${token}`;\r\n\t\t}\r\n\r\n\t\tuni.request({\r\n\t\t\turl: SERVERTAPI + options.url,\r\n\t\t\tmethod: options.method || 'GET',\r\n\t\t\tdata: options.data || {},\r\n\t\t\ttimeout: 100000,\r\n\t\t\theader: header,\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.statusCode === 200) {\r\n\t\t\t\t\tif (res.data.code == 300) {\r\n\t\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\t\ttitle: '请先去登陆吧',\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\t\t\t\turl: \"/pages/account/login\"\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.code == 100) {\r\n\t\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\t\ttitle: '请先去登陆吧',\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\t\t\t\turl: \"/pages/account/login\"\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.code == 0) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\ttitle: res.info\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(res.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (res.statusCode === 401) {\r\n\t\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\t\ttitle: '请先去登陆吧',\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\t\t\t\turl: \"/pages/account/login\"\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\ttitle: `请求失败，状态码：${res.statusCode}`,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treject(res);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\ttitle: '网络请求失败',\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(SERVERTAPI + options.url, err);\r\n\t\t\t\treject(err);\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n};"],"names":["request","options","resolve","reject","token","uni","header","SERVERTAPI","res","err"],"mappings":"oFAIaA,EAAU,CAACC,EAAU,KAC1B,IAAI,QAAQ,CAACC,EAASC,IAAW,CACvC,MAAMC,EAAQC,EAAAA,MAAI,eAAe,OAAO,EAElCC,EAAS,CACd,eAAgB,mBAChB,GAAGL,EAAQ,MACd,EAEMG,IACHE,EAAO,cAAmB,UAAUF,CAAK,IAG1CC,EAAAA,MAAI,QAAQ,CACX,IAAKE,EAAAA,WAAaN,EAAQ,IAC1B,OAAQA,EAAQ,QAAU,MAC1B,KAAMA,EAAQ,MAAQ,CAAE,EACxB,QAAS,IACT,OAAQK,EACR,QAAUE,GAAQ,CACjB,GAAIA,EAAI,aAAe,IAAK,CAC3B,GAAIA,EAAI,KAAK,MAAQ,IAAK,CACzBH,EAAAA,MAAI,UAAU,CACb,MAAO,SACP,QAAQG,EAAK,CACRA,EAAI,SACPH,EAAAA,MAAI,WAAW,CACd,IAAK,sBACf,CAAU,CAGF,CACR,CAAO,EACD,MACA,CACD,GAAIG,EAAI,KAAK,MAAQ,IAAK,CACzBH,EAAAA,MAAI,UAAU,CACb,MAAO,SACP,QAAQG,EAAK,CACRA,EAAI,SACPH,EAAAA,MAAI,WAAW,CACd,IAAK,sBACf,CAAU,CAGF,CACR,CAAO,EACD,MACA,CACD,GAAIG,EAAI,MAAQ,EAAG,CAClBH,EAAAA,MAAI,UAAU,CACb,KAAM,OACN,MAAOG,EAAI,IAClB,CAAO,EACD,MACA,CACDN,EAAQM,EAAI,IAAI,CACrB,MACSA,EAAI,aAAe,IACtBH,EAAAA,MAAI,UAAU,CACb,MAAO,SACP,QAAQG,EAAK,CACRA,EAAI,SACPH,EAAAA,MAAI,WAAW,CACd,IAAK,sBACf,CAAU,CAGF,CACR,CAAO,EAEDA,EAAAA,MAAI,UAAU,CACb,KAAM,OACN,MAAO,YAAYG,EAAI,UAAU,EACxC,CAAO,EAEFL,EAAOK,CAAG,CAEX,EACD,KAAOC,GAAQ,CACdJ,EAAAA,MAAI,UAAU,CACb,KAAM,OACN,MAAO,QACZ,CAAK,EACDA,QAAA,MAAA,MAAA,2BAAYE,EAAU,WAAGN,EAAQ,IAAKQ,CAAG,EACzCN,EAAOM,CAAG,CACV,CACJ,CAAG,CACH,CAAE"}
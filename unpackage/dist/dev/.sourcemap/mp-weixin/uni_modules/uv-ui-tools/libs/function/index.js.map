{"version":3,"file":"index.js","sources":["uni_modules/uv-ui-tools/libs/function/index.js"],"sourcesContent":["import { number, empty } from './test.js'\r\nimport { round } from './digit.js'\r\n/**\r\n * @description 如果value小于min，取min；如果value大于max，取max\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} value\r\n */\r\nfunction range(min = 0, max = 0, value = 0) {\r\n\treturn Math.max(min, Math.min(max, Number(value)))\r\n}\r\n\r\n/**\r\n * @description 用于获取用户传递值的px值  如果用户传递了\"xxpx\"或者\"xxrpx\"，取出其数值部分，如果是\"xxxrpx\"还需要用过uni.upx2px进行转换\r\n * @param {number|string} value 用户传递值的px值\r\n * @param {boolean} unit\r\n * @returns {number|string}\r\n */\r\nfunction getPx(value, unit = false) {\r\n\tif (number(value)) {\r\n\t\treturn unit ? `${value}px` : Number(value)\r\n\t}\r\n\t// 如果带有rpx，先取出其数值部分，再转为px值\r\n\tif (/(rpx|upx)$/.test(value)) {\r\n\t\treturn unit ? `${uni.upx2px(parseInt(value))}px` : Number(uni.upx2px(parseInt(value)))\r\n\t}\r\n\treturn unit ? `${parseInt(value)}px` : parseInt(value)\r\n}\r\n\r\n/**\r\n * @description 进行延时，以达到可以简写代码的目的 比如: await uni.$uv.sleep(20)将会阻塞20ms\r\n * @param {number} value 堵塞时间 单位ms 毫秒\r\n * @returns {Promise} 返回promise\r\n */\r\nfunction sleep(value = 30) {\r\n\treturn new Promise((resolve) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve()\r\n\t\t}, value)\r\n\t})\r\n}\r\n/**\r\n * @description 运行期判断平台\r\n * @returns {string} 返回所在平台(小写)\r\n * @link 运行期判断平台 https://uniapp.dcloud.io/frame?id=判断平台\r\n */\r\nfunction os() {\r\n\treturn uni.getSystemInfoSync().platform.toLowerCase()\r\n}\r\n/**\r\n * @description 获取系统信息同步接口\r\n * @link 获取系统信息同步接口 https://uniapp.dcloud.io/api/system/info?id=getsysteminfosync\r\n */\r\nfunction sys() {\r\n\treturn uni.getSystemInfoSync()\r\n}\r\n\r\n/**\r\n * @description 取一个区间数\r\n * @param {Number} min 最小值\r\n * @param {Number} max 最大值\r\n */\r\nfunction random(min, max) {\r\n\tif (min >= 0 && max > 0 && max >= min) {\r\n\t\tconst gab = max - min + 1\r\n\t\treturn Math.floor(Math.random() * gab + min)\r\n\t}\r\n\treturn 0\r\n}\r\n\r\n/**\r\n * @param {Number} len uuid的长度\r\n * @param {Boolean} firstU 将返回的首字母置为\"u\"\r\n * @param {Nubmer} radix 生成uuid的基数(意味着返回的字符串都是这个基数),2-二进制,8-八进制,10-十进制,16-十六进制\r\n */\r\nfunction guid(len = 32, firstU = true, radix = null) {\r\n\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\r\n\tconst uuid = []\r\n\tradix = radix || chars.length\r\n\r\n\tif (len) {\r\n\t\t// 如果指定uuid长度,只是取随机的字符,0|x为位运算,能去掉x的小数位,返回整数位\r\n\t\tfor (let i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix]\r\n\t} else {\r\n\t\tlet r\r\n\t\t// rfc4122标准要求返回的uuid中,某些位为固定的字符\r\n\t\tuuid[8] = uuid[13] = uuid[18] = uuid[23] = '-'\r\n\t\tuuid[14] = '4'\r\n\r\n\t\tfor (let i = 0; i < 36; i++) {\r\n\t\t\tif (!uuid[i]) {\r\n\t\t\t\tr = 0 | Math.random() * 16\r\n\t\t\t\tuuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// 移除第一个字符,并用u替代,因为第一个字符为数值时,该guuid不能用作id或者class\r\n\tif (firstU) {\r\n\t\tuuid.shift()\r\n\t\treturn `u${uuid.join('')}`\r\n\t}\r\n\treturn uuid.join('')\r\n}\r\n\r\n/**\r\n* @description 获取父组件的参数，因为支付宝小程序不支持provide/inject的写法\r\n   this.$parent在非H5中，可以准确获取到父组件，但是在H5中，需要多次this.$parent.$parent.xxx\r\n   这里默认值等于undefined有它的含义，因为最顶层元素(组件)的$parent就是undefined，意味着不传name\r\n   值(默认为undefined)，就是查找最顶层的$parent\r\n*  @param {string|undefined} name 父组件的参数名\r\n*/\r\nfunction $parent(name = undefined) {\r\n\tlet parent = this.$parent\r\n\t// 通过while历遍，这里主要是为了H5需要多层解析的问题\r\n\twhile (parent) {\r\n\t\t// 父组件\r\n\t\tif (parent.$options && parent.$options.name !== name) {\r\n\t\t\t// 如果组件的name不相等，继续上一级寻找\r\n\t\t\tparent = parent.$parent\r\n\t\t} else {\r\n\t\t\treturn parent\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}\r\n\r\n/**\r\n * @description 样式转换\r\n * 对象转字符串，或者字符串转对象\r\n * @param {object | string} customStyle 需要转换的目标\r\n * @param {String} target 转换的目的，object-转为对象，string-转为字符串\r\n * @returns {object|string}\r\n */\r\nfunction addStyle(customStyle, target = 'object') {\r\n\t// 字符串转字符串，对象转对象情形，直接返回\r\n\tif (empty(customStyle) || typeof(customStyle) === 'object' && target === 'object' || target === 'string' &&\r\n\t\ttypeof(customStyle) === 'string') {\r\n\t\treturn customStyle\r\n\t}\r\n\t// 字符串转对象\r\n\tif (target === 'object') {\r\n\t\t// 去除字符串样式中的两端空格(中间的空格不能去掉，比如padding: 20px 0如果去掉了就错了)，空格是无用的\r\n\t\tcustomStyle = trim(customStyle)\r\n\t\t// 根据\";\"将字符串转为数组形式\r\n\t\tconst styleArray = customStyle.split(';')\r\n\t\tconst style = {}\r\n\t\t// 历遍数组，拼接成对象\r\n\t\tfor (let i = 0; i < styleArray.length; i++) {\r\n\t\t\t// 'font-size:20px;color:red;'，如此最后字符串有\";\"的话，会导致styleArray最后一个元素为空字符串，这里需要过滤\r\n\t\t\tif (styleArray[i]) {\r\n\t\t\t\tconst item = styleArray[i].split(':')\r\n\t\t\t\tstyle[trim(item[0])] = trim(item[1])\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\t// 这里为对象转字符串形式\r\n\tlet string = ''\r\n\tfor (const i in customStyle) {\r\n\t\t// 驼峰转为中划线的形式，否则css内联样式，无法识别驼峰样式属性名\r\n\t\tconst key = i.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\tstring += `${key}:${customStyle[i]};`\r\n\t}\r\n\t// 去除两端空格\r\n\treturn trim(string)\r\n}\r\n\r\n/**\r\n * @description 添加单位，如果有rpx，upx，%，px等单位结尾或者值为auto，直接返回，否则加上px单位结尾\r\n * @param {string|number} value 需要添加单位的值\r\n * @param {string} unit 添加的单位名 比如px\r\n */\r\nfunction addUnit(value = 'auto', unit = uni?.$uv?.config?.unit ? uni?.$uv?.config?.unit : 'px') {\r\n\tvalue = String(value)\r\n\t// 用uvui内置验证规则中的number判断是否为数值\r\n\treturn number(value) ? `${value}${unit}` : value\r\n}\r\n\r\n/**\r\n * @description 深度克隆\r\n * @param {object} obj 需要深度克隆的对象\r\n * @param cache 缓存\r\n * @returns {*} 克隆后的对象或者原值（不是对象）\r\n */\r\nfunction deepClone(obj, cache = new WeakMap()) {\r\n\tif (obj === null || typeof obj !== 'object') return obj;\r\n\tif (cache.has(obj)) return cache.get(obj);\r\n\tlet clone;\r\n\tif (obj instanceof Date) {\r\n\t\tclone = new Date(obj.getTime());\r\n\t} else if (obj instanceof RegExp) {\r\n\t\tclone = new RegExp(obj);\r\n\t} else if (obj instanceof Map) {\r\n\t\tclone = new Map(Array.from(obj, ([key, value]) => [key, deepClone(value, cache)]));\r\n\t} else if (obj instanceof Set) {\r\n\t\tclone = new Set(Array.from(obj, value => deepClone(value, cache)));\r\n\t} else if (Array.isArray(obj)) {\r\n\t\tclone = obj.map(value => deepClone(value, cache));\r\n\t} else if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n\t\tclone = Object.create(Object.getPrototypeOf(obj));\r\n\t\tcache.set(obj, clone);\r\n\t\tfor (const [key, value] of Object.entries(obj)) {\r\n\t\t\tclone[key] = deepClone(value, cache);\r\n\t\t}\r\n\t} else {\r\n\t\tclone = Object.assign({}, obj);\r\n\t}\r\n\tcache.set(obj, clone);\r\n\treturn clone;\r\n}\r\n\r\n/**\r\n * @description JS对象深度合并\r\n * @param {object} target 需要拷贝的对象\r\n * @param {object} source 拷贝的来源对象\r\n * @returns {object|boolean} 深度合并后的对象或者false（入参有不是对象）\r\n */\r\nfunction deepMerge(target = {}, source = {}) {\r\n\ttarget = deepClone(target)\r\n\tif (typeof target !== 'object' || target === null || typeof source !== 'object' || source === null) return target;\r\n\tconst merged = Array.isArray(target) ? target.slice() : Object.assign({}, target);\r\n\tfor (const prop in source) {\r\n\t\tif (!source.hasOwnProperty(prop)) continue;\r\n\t\tconst sourceValue = source[prop];\r\n\t\tconst targetValue = merged[prop];\r\n\t\tif (sourceValue instanceof Date) {\r\n\t\t\tmerged[prop] = new Date(sourceValue);\r\n\t\t} else if (sourceValue instanceof RegExp) {\r\n\t\t\tmerged[prop] = new RegExp(sourceValue);\r\n\t\t} else if (sourceValue instanceof Map) {\r\n\t\t\tmerged[prop] = new Map(sourceValue);\r\n\t\t} else if (sourceValue instanceof Set) {\r\n\t\t\tmerged[prop] = new Set(sourceValue);\r\n\t\t} else if (typeof sourceValue === 'object' && sourceValue !== null) {\r\n\t\t\tmerged[prop] = deepMerge(targetValue, sourceValue);\r\n\t\t} else {\r\n\t\t\tmerged[prop] = sourceValue;\r\n\t\t}\r\n\t}\r\n\treturn merged;\r\n}\r\n\r\n/**\r\n * @description error提示\r\n * @param {*} err 错误内容\r\n */\r\nfunction error(err) {\r\n\t// 开发环境才提示，生产环境不会提示\r\n\tif (process.env.NODE_ENV === 'development') {\r\n\t\tconsole.error(`uvui提示：${err}`)\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 打乱数组\r\n * @param {array} array 需要打乱的数组\r\n * @returns {array} 打乱后的数组\r\n */\r\nfunction randomArray(array = []) {\r\n\t// 原理是sort排序,Math.random()产生0<= x < 1之间的数,会导致x-0.05大于或者小于0\r\n\treturn array.sort(() => Math.random() - 0.5)\r\n}\r\n\r\n// padStart 的 polyfill，因为某些机型或情况，还无法支持es7的padStart，比如电脑版的微信小程序\r\n// 所以这里做一个兼容polyfill的兼容处理\r\nif (!String.prototype.padStart) {\r\n\t// 为了方便表示这里 fillString 用了ES6 的默认参数，不影响理解\r\n\tString.prototype.padStart = function(maxLength, fillString = ' ') {\r\n\t\tif (Object.prototype.toString.call(fillString) !== '[object String]') {\r\n\t\t\tthrow new TypeError(\r\n\t\t\t\t'fillString must be String'\r\n\t\t\t)\r\n\t\t}\r\n\t\tconst str = this\r\n\t\t// 返回 String(str) 这里是为了使返回的值是字符串字面量，在控制台中更符合直觉\r\n\t\tif (str.length >= maxLength) return String(str)\r\n\r\n\t\tconst fillLength = maxLength - str.length\r\n\t\tlet times = Math.ceil(fillLength / fillString.length)\r\n\t\twhile (times >>= 1) {\r\n\t\t\tfillString += fillString\r\n\t\t\tif (times === 1) {\r\n\t\t\t\tfillString += fillString\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fillString.slice(0, fillLength) + str\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 格式化时间\r\n * @param {String|Number} dateTime 需要格式化的时间戳\r\n * @param {String} fmt 格式化规则 yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合 默认yyyy-mm-dd\r\n * @returns {string} 返回格式化后的字符串\r\n */\r\nfunction timeFormat(dateTime = null, formatStr = 'yyyy-mm-dd') {\r\n\tlet date\r\n\t// 若传入时间为假值，则取当前时间\r\n\tif (!dateTime) {\r\n\t\tdate = new Date()\r\n\t}\r\n\t// 若为unix秒时间戳，则转为毫秒时间戳（逻辑有点奇怪，但不敢改，以保证历史兼容）\r\n\telse if (/^\\d{10}$/.test(dateTime?.toString().trim())) {\r\n\t\tdate = new Date(dateTime * 1000)\r\n\t}\r\n\t// 若用户传入字符串格式时间戳，new Date无法解析，需做兼容\r\n\telse if (typeof dateTime === 'string' && /^\\d+$/.test(dateTime.trim())) {\r\n\t\tdate = new Date(Number(dateTime))\r\n\t}\r\n\t// 处理平台性差异，在Safari/Webkit中，new Date仅支持/作为分割符的字符串时间\r\n\t// 处理 '2022-07-10 01:02:03'，跳过 '2022-07-10T01:02:03'\r\n\telse if (typeof dateTime === 'string' && dateTime.includes('-') && !dateTime.includes('T')) {\r\n\t\tdate = new Date(dateTime.replace(/-/g, '/'))\r\n\t}\r\n\t// 其他都认为符合 RFC 2822 规范\r\n\telse {\r\n\t\tdate = new Date(dateTime)\r\n\t}\r\n\r\n\tconst timeSource = {\r\n\t\t'y': date.getFullYear().toString(), // 年\r\n\t\t'm': (date.getMonth() + 1).toString().padStart(2, '0'), // 月\r\n\t\t'd': date.getDate().toString().padStart(2, '0'), // 日\r\n\t\t'h': date.getHours().toString().padStart(2, '0'), // 时\r\n\t\t'M': date.getMinutes().toString().padStart(2, '0'), // 分\r\n\t\t's': date.getSeconds().toString().padStart(2, '0') // 秒\r\n\t\t// 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n\t}\r\n\r\n\tfor (const key in timeSource) {\r\n\t\tconst [ret] = new RegExp(`${key}+`).exec(formatStr) || []\r\n\t\tif (ret) {\r\n\t\t\t// 年可能只需展示两位\r\n\t\t\tconst beginIndex = key === 'y' && ret.length === 2 ? 2 : 0\r\n\t\t\tformatStr = formatStr.replace(ret, timeSource[key].slice(beginIndex))\r\n\t\t}\r\n\t}\r\n\r\n\treturn formatStr\r\n}\r\n\r\n/**\r\n * @description 时间戳转为多久之前\r\n * @param {String|Number} timestamp 时间戳\r\n * @param {String|Boolean} format\r\n * 格式化规则如果为时间格式字符串，超出一定时间范围，返回固定的时间格式；\r\n * 如果为布尔值false，无论什么时间，都返回多久以前的格式\r\n * @returns {string} 转化后的内容\r\n */\r\nfunction timeFrom(timestamp = null, format = 'yyyy-mm-dd') {\r\n\tif (timestamp == null) timestamp = Number(new Date())\r\n\ttimestamp = parseInt(timestamp)\r\n\t// 判断用户输入的时间戳是秒还是毫秒,一般前端js获取的时间戳是毫秒(13位),后端传过来的为秒(10位)\r\n\tif (timestamp.toString().length == 10) timestamp *= 1000\r\n\tlet timer = (new Date()).getTime() - timestamp\r\n\ttimer = parseInt(timer / 1000)\r\n\t// 如果小于5分钟,则返回\"刚刚\",其他以此类推\r\n\tlet tips = ''\r\n\tswitch (true) {\r\n\t\tcase timer < 300:\r\n\t\t\ttips = '刚刚'\r\n\t\t\tbreak\r\n\t\tcase timer >= 300 && timer < 3600:\r\n\t\t\ttips = `${parseInt(timer / 60)}分钟前`\r\n\t\t\tbreak\r\n\t\tcase timer >= 3600 && timer < 86400:\r\n\t\t\ttips = `${parseInt(timer / 3600)}小时前`\r\n\t\t\tbreak\r\n\t\tcase timer >= 86400 && timer < 2592000:\r\n\t\t\ttips = `${parseInt(timer / 86400)}天前`\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\t// 如果format为false，则无论什么时间戳，都显示xx之前\r\n\t\t\tif (format === false) {\r\n\t\t\t\tif (timer >= 2592000 && timer < 365 * 86400) {\r\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 30))}个月前`\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 365))}年前`\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttips = timeFormat(timestamp, format)\r\n\t\t\t}\r\n\t}\r\n\treturn tips\r\n}\r\n\r\n/**\r\n * @description 去除空格\r\n * @param String str 需要去除空格的字符串\r\n * @param String pos both(左右)|left|right|all 默认both\r\n */\r\nfunction trim(str, pos = 'both') {\r\n\tstr = String(str)\r\n\tif (pos == 'both') {\r\n\t\treturn str.replace(/^\\s+|\\s+$/g, '')\r\n\t}\r\n\tif (pos == 'left') {\r\n\t\treturn str.replace(/^\\s*/, '')\r\n\t}\r\n\tif (pos == 'right') {\r\n\t\treturn str.replace(/(\\s*$)/g, '')\r\n\t}\r\n\tif (pos == 'all') {\r\n\t\treturn str.replace(/\\s+/g, '')\r\n\t}\r\n\treturn str\r\n}\r\n\r\n/**\r\n * @description 对象转url参数\r\n * @param {object} data,对象\r\n * @param {Boolean} isPrefix,是否自动加上\"?\"\r\n * @param {string} arrayFormat 规则 indices|brackets|repeat|comma\r\n */\r\nfunction queryParams(data = {}, isPrefix = true, arrayFormat = 'brackets') {\r\n\tconst prefix = isPrefix ? '?' : ''\r\n\tconst _result = []\r\n\tif (['indices', 'brackets', 'repeat', 'comma'].indexOf(arrayFormat) == -1) arrayFormat = 'brackets'\r\n\tfor (const key in data) {\r\n\t\tconst value = data[key]\r\n\t\t// 去掉为空的参数\r\n\t\tif (['', undefined, null].indexOf(value) >= 0) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\t// 如果值为数组，另行处理\r\n\t\tif (value.constructor === Array) {\r\n\t\t\t// e.g. {ids: [1, 2, 3]}\r\n\t\t\tswitch (arrayFormat) {\r\n\t\t\t\tcase 'indices':\r\n\t\t\t\t\t// 结果: ids[0]=1&ids[1]=2&ids[2]=3\r\n\t\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\t\t_result.push(`${key}[${i}]=${value[i]}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'brackets':\r\n\t\t\t\t\t// 结果: ids[]=1&ids[]=2&ids[]=3\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'repeat':\r\n\t\t\t\t\t// 结果: ids=1&ids=2&ids=3\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'comma':\r\n\t\t\t\t\t// 结果: ids=1,2,3\r\n\t\t\t\t\tlet commaStr = ''\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\tcommaStr += (commaStr ? ',' : '') + _value\r\n\t\t\t\t\t})\r\n\t\t\t\t\t_result.push(`${key}=${commaStr}`)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t_result.push(`${key}=${value}`)\r\n\t\t}\r\n\t}\r\n\treturn _result.length ? prefix + _result.join('&') : ''\r\n}\r\n\r\n/**\r\n * 显示消息提示框\r\n * @param {String} title 提示的内容，长度与 icon 取值有关。\r\n * @param {Number} duration 提示的延迟时间，单位毫秒，默认：2000\r\n */\r\nfunction toast(title, duration = 2000) {\r\n\tuni.showToast({\r\n\t\ttitle: String(title),\r\n\t\ticon: 'none',\r\n\t\tduration\r\n\t})\r\n}\r\n\r\n/**\r\n * @description 根据主题type值,获取对应的图标\r\n * @param {String} type 主题名称,primary|info|error|warning|success\r\n * @param {boolean} fill 是否使用fill填充实体的图标\r\n */\r\nfunction type2icon(type = 'success', fill = false) {\r\n\t// 如果非预置值,默认为success\r\n\tif (['primary', 'info', 'error', 'warning', 'success'].indexOf(type) == -1) type = 'success'\r\n\tlet iconName = ''\r\n\t// 目前(2019-12-12),info和primary使用同一个图标\r\n\tswitch (type) {\r\n\t\tcase 'primary':\r\n\t\t\ticonName = 'info-circle'\r\n\t\t\tbreak\r\n\t\tcase 'info':\r\n\t\t\ticonName = 'info-circle'\r\n\t\t\tbreak\r\n\t\tcase 'error':\r\n\t\t\ticonName = 'close-circle'\r\n\t\t\tbreak\r\n\t\tcase 'warning':\r\n\t\t\ticonName = 'error-circle'\r\n\t\t\tbreak\r\n\t\tcase 'success':\r\n\t\t\ticonName = 'checkmark-circle'\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\ticonName = 'checkmark-circle'\r\n\t}\r\n\t// 是否是实体类型,加上-fill,在icon组件库中,实体的类名是后面加-fill的\r\n\tif (fill) iconName += '-fill'\r\n\treturn iconName\r\n}\r\n\r\n/**\r\n * @description 数字格式化\r\n * @param {number|string} number 要格式化的数字\r\n * @param {number} decimals 保留几位小数\r\n * @param {string} decimalPoint 小数点符号\r\n * @param {string} thousandsSeparator 千分位符号\r\n * @returns {string} 格式化后的数字\r\n */\r\nfunction priceFormat(number, decimals = 0, decimalPoint = '.', thousandsSeparator = ',') {\r\n\tnumber = (`${number}`).replace(/[^0-9+-Ee.]/g, '')\r\n\tconst n = !isFinite(+number) ? 0 : +number\r\n\tconst prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\r\n\tconst sep = (typeof thousandsSeparator === 'undefined') ? ',' : thousandsSeparator\r\n\tconst dec = (typeof decimalPoint === 'undefined') ? '.' : decimalPoint\r\n\tlet s = ''\r\n\r\n\ts = (prec ? round(n, prec) + '' : `${Math.round(n)}`).split('.')\r\n\tconst re = /(-?\\d+)(\\d{3})/\r\n\twhile (re.test(s[0])) {\r\n\t\ts[0] = s[0].replace(re, `$1${sep}$2`)\r\n\t}\r\n\r\n\tif ((s[1] || '').length < prec) {\r\n\t\ts[1] = s[1] || ''\r\n\t\ts[1] += new Array(prec - s[1].length + 1).join('0')\r\n\t}\r\n\treturn s.join(dec)\r\n}\r\n\r\n/**\r\n * @description 获取duration值\r\n * 如果带有ms或者s直接返回，如果大于一定值，认为是ms单位，小于一定值，认为是s单位\r\n * 比如以30位阈值，那么300大于30，可以理解为用户想要的是300ms，而不是想花300s去执行一个动画\r\n * @param {String|number} value 比如: \"1s\"|\"100ms\"|1|100\r\n * @param {boolean} unit  提示: 如果是false 默认返回number\r\n * @return {string|number}\r\n */\r\nfunction getDuration(value, unit = true) {\r\n\tconst valueNum = parseInt(value)\r\n\tif (unit) {\r\n\t\tif (/s$/.test(value)) return value\r\n\t\treturn value > 30 ? `${value}ms` : `${value}s`\r\n\t}\r\n\tif (/ms$/.test(value)) return valueNum\r\n\tif (/s$/.test(value)) return valueNum > 30 ? valueNum : valueNum * 1000\r\n\treturn valueNum\r\n}\r\n\r\n/**\r\n * @description 日期的月或日补零操作\r\n * @param {String} value 需要补零的值\r\n */\r\nfunction padZero(value) {\r\n\treturn `00${value}`.slice(-2)\r\n}\r\n\r\n/**\r\n * @description 在uv-form的子组件内容发生变化，或者失去焦点时，尝试通知uv-form执行校验方法\r\n * @param {*} instance\r\n * @param {*} event\r\n */\r\nfunction formValidate(instance, event) {\r\n\tconst formItem = $parent.call(instance, 'uv-form-item')\r\n\tconst form = $parent.call(instance, 'uv-form')\r\n\t// 如果发生变化的input或者textarea等，其父组件中有uv-form-item或者uv-form等，就执行form的validate方法\r\n\t// 同时将form-item的pros传递给form，让其进行精确对象验证\r\n\tif (formItem && form) {\r\n\t\tform.validateField(formItem.prop, () => {}, event)\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 获取某个对象下的属性，用于通过类似'a.b.c'的形式去获取一个对象的的属性的形式\r\n * @param {object} obj 对象\r\n * @param {string} key 需要获取的属性字段\r\n * @returns {*}\r\n */\r\nfunction getProperty(obj, key) {\r\n\tif (!obj) {\r\n\t\treturn\r\n\t}\r\n\tif (typeof key !== 'string' || key === '') {\r\n\t\treturn ''\r\n\t}\r\n\tif (key.indexOf('.') !== -1) {\r\n\t\tconst keys = key.split('.')\r\n\t\tlet firstObj = obj[keys[0]] || {}\r\n\r\n\t\tfor (let i = 1; i < keys.length; i++) {\r\n\t\t\tif (firstObj) {\r\n\t\t\t\tfirstObj = firstObj[keys[i]]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn firstObj\r\n\t}\r\n\treturn obj[key]\r\n}\r\n\r\n/**\r\n * @description 设置对象的属性值，如果'a.b.c'的形式进行设置\r\n * @param {object} obj 对象\r\n * @param {string} key 需要设置的属性\r\n * @param {string} value 设置的值\r\n */\r\nfunction setProperty(obj, key, value) {\r\n\tif (!obj) {\r\n\t\treturn\r\n\t}\r\n\t// 递归赋值\r\n\tconst inFn = function(_obj, keys, v) {\r\n\t\t// 最后一个属性key\r\n\t\tif (keys.length === 1) {\r\n\t\t\t_obj[keys[0]] = v\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// 0~length-1个key\r\n\t\twhile (keys.length > 1) {\r\n\t\t\tconst k = keys[0]\r\n\t\t\tif (!_obj[k] || (typeof _obj[k] !== 'object')) {\r\n\t\t\t\t_obj[k] = {}\r\n\t\t\t}\r\n\t\t\tconst key = keys.shift()\r\n\t\t\t// 自调用判断是否存在属性，不存在则自动创建对象\r\n\t\t\tinFn(_obj[k], keys, v)\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof key !== 'string' || key === '') {\r\n\r\n\t} else if (key.indexOf('.') !== -1) { // 支持多层级赋值操作\r\n\t\tconst keys = key.split('.')\r\n\t\tinFn(obj, keys, value)\r\n\t} else {\r\n\t\tobj[key] = value\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 获取当前页面路径\r\n */\r\nfunction page() {\r\n\tconst pages = getCurrentPages();\r\n\tconst route = pages[pages.length - 1]?.route;\r\n\t// 某些特殊情况下(比如页面进行redirectTo时的一些时机)，pages可能为空数组\r\n\treturn `/${route ? route : ''}`\r\n}\r\n\r\n/**\r\n * @description 获取当前路由栈实例数组\r\n */\r\nfunction pages() {\r\n\tconst pages = getCurrentPages()\r\n\treturn pages\r\n}\r\n\r\n/**\r\n * 获取页面历史栈指定层实例\r\n * @param back {number} [0] - 0或者负数，表示获取历史栈的哪一层，0表示获取当前页面实例，-1 表示获取上一个页面实例。默认0。\r\n */\r\nfunction getHistoryPage(back = 0) {\r\n\tconst pages = getCurrentPages()\r\n\tconst len = pages.length\r\n\treturn pages[len - 1 + back]\r\n}\r\n\r\n\r\n\r\n/**\r\n * @description 修改uvui内置属性值\r\n * @param {object} props 修改内置props属性\r\n * @param {object} config 修改内置config属性\r\n * @param {object} color 修改内置color属性\r\n * @param {object} zIndex 修改内置zIndex属性\r\n */\r\nfunction setConfig({\r\n\tprops = {},\r\n\tconfig = {},\r\n\tcolor = {},\r\n\tzIndex = {}\r\n}) {\r\n\tconst {\r\n\t\tdeepMerge,\r\n\t} = uni.$uv\r\n\tuni.$uv.config = deepMerge(uni.$uv.config, config)\r\n\tuni.$uv.props = deepMerge(uni.$uv.props, props)\r\n\tuni.$uv.color = deepMerge(uni.$uv.color, color)\r\n\tuni.$uv.zIndex = deepMerge(uni.$uv.zIndex, zIndex)\r\n}\r\n\r\nexport {\r\n\trange,\r\n\tgetPx,\r\n\tsleep,\r\n\tos,\r\n\tsys,\r\n\trandom,\r\n\tguid,\r\n\t$parent,\r\n\taddStyle,\r\n\taddUnit,\r\n\tdeepClone,\r\n\tdeepMerge,\r\n\terror,\r\n\trandomArray,\r\n\ttimeFormat,\r\n\ttimeFrom,\r\n\ttrim,\r\n\tqueryParams,\r\n\ttoast,\r\n\ttype2icon,\r\n\tpriceFormat,\r\n\tgetDuration,\r\n\tpadZero,\r\n\tformValidate,\r\n\tgetProperty,\r\n\tsetProperty,\r\n\tpage,\r\n\tpages,\r\n\tgetHistoryPage,\r\n\tsetConfig\r\n}"],"names":["range","min","max","value","getPx","unit","number","uni","sleep","resolve","os","sys","random","gab","guid","len","firstU","radix","chars","uuid","i","r","$parent","name","parent","addStyle","customStyle","target","empty","trim","styleArray","style","item","string","key","addUnit","deepClone","obj","cache","clone","deepMerge","source","merged","prop","sourceValue","targetValue","error","err","randomArray","array","maxLength","fillString","str","fillLength","times","timeFormat","dateTime","formatStr","date","timeSource","ret","beginIndex","timeFrom","timestamp","format","timer","tips","pos","queryParams","data","isPrefix","arrayFormat","prefix","_result","_value","commaStr","toast","title","duration","type2icon","type","fill","iconName","priceFormat","decimals","decimalPoint","thousandsSeparator","n","prec","sep","dec","s","round","re","getDuration","valueNum","padZero","formValidate","instance","event","formItem","form","getProperty","keys","firstObj","setProperty","inFn","_obj","v","k","page","pages","route","getHistoryPage","back","setConfig","props","config","color","zIndex"],"mappings":"4GAQA,SAASA,EAAMC,EAAM,EAAGC,EAAM,EAAGC,EAAQ,EAAG,CACpC,OAAA,KAAK,IAAIF,EAAK,KAAK,IAAIC,EAAK,OAAOC,CAAK,CAAC,CAAC,CAClD,CAQA,SAASC,EAAMD,EAAOE,EAAO,GAAO,CAC/B,OAAAC,EAAAA,OAAOH,CAAK,EACRE,EAAO,GAAGF,CAAK,KAAO,OAAOA,CAAK,EAGtC,aAAa,KAAKA,CAAK,EACnBE,EAAO,GAAGE,EAAAA,MAAI,OAAO,SAASJ,CAAK,CAAC,CAAC,KAAO,OAAOI,EAAAA,MAAI,OAAO,SAASJ,CAAK,CAAC,CAAC,EAE/EE,EAAO,GAAG,SAASF,CAAK,CAAC,KAAO,SAASA,CAAK,CACtD,CAOA,SAASK,EAAML,EAAQ,GAAI,CACnB,OAAA,IAAI,QAASM,GAAY,CAC/B,WAAW,IAAM,CACRA,KACNN,CAAK,CAAA,CACR,CACF,CAMA,SAASO,GAAK,CACb,OAAOH,EAAI,MAAA,kBAAA,EAAoB,SAAS,YAAY,CACrD,CAKA,SAASI,GAAM,CACd,OAAOJ,EAAAA,MAAI,mBACZ,CAOA,SAASK,EAAOX,EAAKC,EAAK,CACzB,GAAID,GAAO,GAAKC,EAAM,GAAKA,GAAOD,EAAK,CAChC,MAAAY,EAAMX,EAAMD,EAAM,EACxB,OAAO,KAAK,MAAM,KAAK,OAAO,EAAIY,EAAMZ,CAAG,CAC5C,CACO,MAAA,EACR,CAOA,SAASa,EAAKC,EAAM,GAAIC,EAAS,GAAMC,EAAQ,KAAM,CAC9C,MAAAC,EAAQ,iEAAiE,MAAM,EAAE,EACjFC,EAAO,CAAA,EAGb,GAFAF,EAAQA,GAASC,EAAM,OAEnBH,EAEM,QAAAK,EAAI,EAAGA,EAAIL,EAAKK,IAAKD,EAAKC,CAAC,EAAIF,EAAM,EAAI,KAAK,OAAA,EAAWD,CAAK,MACjE,CACF,IAAAI,EAECF,EAAA,CAAC,EAAIA,EAAK,EAAE,EAAIA,EAAK,EAAE,EAAIA,EAAK,EAAE,EAAI,IAC3CA,EAAK,EAAE,EAAI,IAEX,QAASC,EAAI,EAAGA,EAAI,GAAIA,IAClBD,EAAKC,CAAC,IACNC,EAAA,EAAI,KAAK,OAAA,EAAW,GACnBF,EAAAC,CAAC,EAAIF,EAAOE,GAAK,GAAOC,EAAI,EAAO,EAAMA,CAAC,EAGlD,CAEA,OAAIL,GACHG,EAAK,MAAM,EACJ,IAAIA,EAAK,KAAK,EAAE,CAAC,IAElBA,EAAK,KAAK,EAAE,CACpB,CASA,SAASG,EAAQC,EAAO,OAAW,CAClC,IAAIC,EAAS,KAAK,QAElB,KAAOA,GAEN,GAAIA,EAAO,UAAYA,EAAO,SAAS,OAASD,EAE/CC,EAASA,EAAO,YAET,QAAAA,EAGF,MAAA,EACR,CASA,SAASC,EAASC,EAAaC,EAAS,SAAU,CAEjD,GAAIC,QAAMF,CAAW,GAAK,OAAOA,GAAiB,UAAYC,IAAW,UAAYA,IAAW,UAC/F,OAAOD,GAAiB,SACjB,OAAAA,EAGR,GAAIC,IAAW,SAAU,CAExBD,EAAcG,EAAKH,CAAW,EAExB,MAAAI,EAAaJ,EAAY,MAAM,GAAG,EAClCK,EAAQ,CAAA,EAEd,QAASX,EAAI,EAAGA,EAAIU,EAAW,OAAQV,IAElC,GAAAU,EAAWV,CAAC,EAAG,CAClB,MAAMY,EAAOF,EAAWV,CAAC,EAAE,MAAM,GAAG,EAC9BW,EAAAF,EAAKG,EAAK,CAAC,CAAC,CAAC,EAAIH,EAAKG,EAAK,CAAC,CAAC,CACpC,CAEM,OAAAD,CACR,CAEA,IAAIE,EAAS,GACb,UAAW,KAAKP,EAAa,CAE5B,MAAMQ,EAAM,EAAE,QAAQ,WAAY,KAAK,EAAE,cACzCD,GAAU,GAAGC,CAAG,IAAIR,EAAY,CAAC,CAAC,GACnC,CAEA,OAAOG,EAAKI,CAAM,CACnB,CAOA,SAASE,EAAQhC,EAAQ,OAAQE,GAAOE,OAAAA,OAAAA,MAAAA,EAAK,QAALA,YAAAA,EAAK,SAALA,YAAAA,EAAU,YAAVA,YAAAA,EAAkB,SAAOA,OAAAA,OAAAA,MAAAA,EAAAA,QAAAA,YAAAA,EAAK,SAALA,YAAAA,EAAU,YAAVA,YAAAA,EAAkB,QAAO,KAAM,CAC/F,OAAAJ,EAAQ,OAAOA,CAAK,EAEbG,SAAOH,CAAK,EAAI,GAAGA,CAAK,GAAGE,CAAI,GAAKF,CAC5C,CAQA,SAASiC,EAAUC,EAAKC,EAAQ,IAAI,QAAW,CAC1C,GAAAD,IAAQ,MAAQ,OAAOA,GAAQ,SAAiB,OAAAA,EAChD,GAAAC,EAAM,IAAID,CAAG,EAAU,OAAAC,EAAM,IAAID,CAAG,EACpC,IAAAE,EACJ,GAAIF,aAAe,KAClBE,EAAQ,IAAI,KAAKF,EAAI,QAAS,CAAA,UACpBA,aAAe,OACjBE,EAAA,IAAI,OAAOF,CAAG,UACZA,aAAe,IACzBE,EAAQ,IAAI,IAAI,MAAM,KAAKF,EAAK,CAAC,CAACH,EAAK/B,CAAK,IAAM,CAAC+B,EAAKE,EAAUjC,EAAOmC,CAAK,CAAC,CAAC,CAAC,UACvED,aAAe,IACjBE,EAAA,IAAI,IAAI,MAAM,KAAKF,KAAcD,EAAUjC,EAAOmC,CAAK,CAAC,CAAC,UACvD,MAAM,QAAQD,CAAG,EAC3BE,EAAQF,EAAI,IAAIlC,GAASiC,EAAUjC,EAAOmC,CAAK,CAAC,UACtC,OAAO,UAAU,SAAS,KAAKD,CAAG,IAAM,kBAAmB,CACrEE,EAAQ,OAAO,OAAO,OAAO,eAAeF,CAAG,CAAC,EAC1CC,EAAA,IAAID,EAAKE,CAAK,EACpB,SAAW,CAACL,EAAK/B,CAAK,IAAK,OAAO,QAAQkC,CAAG,EAC5CE,EAAML,CAAG,EAAIE,EAAUjC,EAAOmC,CAAK,CACpC,MAEAC,EAAQ,OAAO,OAAO,CAAC,EAAGF,CAAG,EAExB,OAAAC,EAAA,IAAID,EAAKE,CAAK,EACbA,CACR,CAQA,SAASC,EAAUb,EAAS,GAAIc,EAAS,CAAA,EAAI,CAExC,GADJd,EAASS,EAAUT,CAAM,EACrB,OAAOA,GAAW,UAAYA,IAAW,MAAQ,OAAOc,GAAW,UAAYA,IAAW,KAAa,OAAAd,EAC3G,MAAMe,EAAS,MAAM,QAAQf,CAAM,EAAIA,EAAO,MAAM,EAAI,OAAO,OAAO,CAAC,EAAGA,CAAM,EAChF,UAAWgB,KAAQF,EAAQ,CACtB,GAAA,CAACA,EAAO,eAAeE,CAAI,EAAG,SAC5B,MAAAC,EAAcH,EAAOE,CAAI,EACzBE,EAAcH,EAAOC,CAAI,EAC3BC,aAAuB,KAC1BF,EAAOC,CAAI,EAAI,IAAI,KAAKC,CAAW,EACzBA,aAAuB,OACjCF,EAAOC,CAAI,EAAI,IAAI,OAAOC,CAAW,EAC3BA,aAAuB,IACjCF,EAAOC,CAAI,EAAI,IAAI,IAAIC,CAAW,EACxBA,aAAuB,IACjCF,EAAOC,CAAI,EAAI,IAAI,IAAIC,CAAW,EACxB,OAAOA,GAAgB,UAAYA,IAAgB,KAC7DF,EAAOC,CAAI,EAAIH,EAAUK,EAAaD,CAAW,EAEjDF,EAAOC,CAAI,EAAIC,CAEjB,CACO,OAAAF,CACR,CAMA,SAASI,EAAMC,EAAK,CAGlBxC,EAAA,MAAc,MAAA,QAAA,wDAAA,UAAUwC,CAAG,EAAE,CAE/B,CAOA,SAASC,EAAYC,EAAQ,GAAI,CAEhC,OAAOA,EAAM,KAAK,IAAM,KAAK,OAAA,EAAW,EAAG,CAC5C,CAIK,OAAO,UAAU,WAErB,OAAO,UAAU,SAAW,SAASC,EAAWC,EAAa,IAAK,CACjE,GAAI,OAAO,UAAU,SAAS,KAAKA,CAAU,IAAM,kBAClD,MAAM,IAAI,UACT,2BAAA,EAGF,MAAMC,EAAM,KAEZ,GAAIA,EAAI,QAAUF,EAAW,OAAO,OAAOE,CAAG,EAExC,MAAAC,EAAaH,EAAYE,EAAI,OACnC,IAAIE,EAAQ,KAAK,KAAKD,EAAaF,EAAW,MAAM,EACpD,KAAOG,IAAU,GACFH,GAAAA,EACVG,IAAU,IACCH,GAAAA,GAGhB,OAAOA,EAAW,MAAM,EAAGE,CAAU,EAAID,CAAA,GAU3C,SAASG,EAAWC,EAAW,KAAMC,EAAY,aAAc,CAC1D,IAAAC,EAECF,EAII,WAAW,KAAKA,GAAA,YAAAA,EAAU,WAAW,MAAM,EAC5CE,EAAA,IAAI,KAAKF,EAAW,GAAI,EAGvB,OAAOA,GAAa,UAAY,QAAQ,KAAKA,EAAS,KAAK,CAAC,EACpEE,EAAO,IAAI,KAAK,OAAOF,CAAQ,CAAC,EAIxB,OAAOA,GAAa,UAAYA,EAAS,SAAS,GAAG,GAAK,CAACA,EAAS,SAAS,GAAG,EACxFE,EAAO,IAAI,KAAKF,EAAS,QAAQ,KAAM,GAAG,CAAC,EAIpCE,EAAA,IAAI,KAAKF,CAAQ,EAjBxBE,MAAW,KAoBZ,MAAMC,EAAa,CAClB,EAAKD,EAAK,YAAY,EAAE,SAAS,EACjC,GAAMA,EAAK,WAAa,GAAG,WAAW,SAAS,EAAG,GAAG,EACrD,EAAKA,EAAK,QAAQ,EAAE,WAAW,SAAS,EAAG,GAAG,EAC9C,EAAKA,EAAK,SAAS,EAAE,WAAW,SAAS,EAAG,GAAG,EAC/C,EAAKA,EAAK,WAAW,EAAE,WAAW,SAAS,EAAG,GAAG,EACjD,EAAKA,EAAK,WAAW,EAAE,WAAW,SAAS,EAAG,GAAG,CAAA,EAIlD,UAAWxB,KAAOyB,EAAY,CAC7B,KAAM,CAACC,CAAG,EAAI,IAAI,OAAO,GAAG1B,CAAG,GAAG,EAAE,KAAKuB,CAAS,GAAK,CAAA,EACvD,GAAIG,EAAK,CAER,MAAMC,EAAa3B,IAAQ,KAAO0B,EAAI,SAAW,EAAI,EAAI,EAC7CH,EAAAA,EAAU,QAAQG,EAAKD,EAAWzB,CAAG,EAAE,MAAM2B,CAAU,CAAC,CACrE,CACD,CAEO,OAAAJ,CACR,CAUA,SAASK,EAASC,EAAY,KAAMC,EAAS,aAAc,CACtDD,GAAa,OAAkBA,EAAA,OAAW,IAAA,IAAM,GACpDA,EAAY,SAASA,CAAS,EAE1BA,EAAU,WAAW,QAAU,KAAiBA,GAAA,KACpD,IAAIE,EAAS,IAAI,KAAK,EAAG,UAAYF,EAC7BE,EAAA,SAASA,EAAQ,GAAI,EAE7B,IAAIC,EAAO,GACX,OAAQ,GAAM,CACb,KAAKD,EAAQ,IACLC,EAAA,KACP,MACD,KAAKD,GAAS,KAAOA,EAAQ,MAC5BC,EAAO,GAAG,SAASD,EAAQ,EAAE,CAAC,MAC9B,MACD,KAAKA,GAAS,MAAQA,EAAQ,OAC7BC,EAAO,GAAG,SAASD,EAAQ,IAAI,CAAC,MAChC,MACD,KAAKA,GAAS,OAASA,EAAQ,QAC9BC,EAAO,GAAG,SAASD,EAAQ,KAAK,CAAC,KACjC,MACD,QAEKD,IAAW,GACVC,GAAS,QAAWA,EAAQ,IAAM,MACrCC,EAAO,GAAG,SAASD,GAAS,MAAQ,GAAG,CAAC,MAExCC,EAAO,GAAG,SAASD,GAAS,MAAQ,IAAI,CAAC,KAGnCC,EAAAX,EAAWQ,EAAWC,CAAM,CAEtC,CACO,OAAAE,CACR,CAOA,SAASrC,EAAKuB,EAAKe,EAAM,OAAQ,CAEhC,OADAf,EAAM,OAAOA,CAAG,EACZe,GAAO,OACHf,EAAI,QAAQ,aAAc,EAAE,EAEhCe,GAAO,OACHf,EAAI,QAAQ,OAAQ,EAAE,EAE1Be,GAAO,QACHf,EAAI,QAAQ,UAAW,EAAE,EAE7Be,GAAO,MACHf,EAAI,QAAQ,OAAQ,EAAE,EAEvBA,CACR,CAQA,SAASgB,EAAYC,EAAO,GAAIC,EAAW,GAAMC,EAAc,WAAY,CACpE,MAAAC,EAASF,EAAW,IAAM,GAC1BG,EAAU,CAAA,EACZ,CAAC,UAAW,WAAY,SAAU,OAAO,EAAE,QAAQF,CAAW,GAAK,KAAkBA,EAAA,YACzF,UAAWrC,KAAOmC,EAAM,CACjB,MAAAlE,EAAQkE,EAAKnC,CAAG,EAElB,GAAA,GAAC,GAAI,OAAW,IAAI,EAAE,QAAQ/B,CAAK,GAAK,GAIxC,GAAAA,EAAM,cAAgB,MAEzB,OAAQoE,EAAa,CACpB,IAAK,UAEJ,QAASnD,EAAI,EAAGA,EAAIjB,EAAM,OAAQiB,IACzBqD,EAAA,KAAK,GAAGvC,CAAG,IAAId,CAAC,KAAKjB,EAAMiB,CAAC,CAAC,EAAE,EAExC,MACD,IAAK,WAEEjB,EAAA,QAASuE,GAAW,CACzBD,EAAQ,KAAK,GAAGvC,CAAG,MAAMwC,CAAM,EAAE,CAAA,CACjC,EACD,MACD,IAAK,SAEEvE,EAAA,QAASuE,GAAW,CACzBD,EAAQ,KAAK,GAAGvC,CAAG,IAAIwC,CAAM,EAAE,CAAA,CAC/B,EACD,MACD,IAAK,QAEJ,IAAIC,EAAW,GACTxE,EAAA,QAASuE,GAAW,CACZC,IAAAA,EAAW,IAAM,IAAMD,CAAA,CACpC,EACDD,EAAQ,KAAK,GAAGvC,CAAG,IAAIyC,CAAQ,EAAE,EACjC,MACD,QACOxE,EAAA,QAASuE,GAAW,CACzBD,EAAQ,KAAK,GAAGvC,CAAG,MAAMwC,CAAM,EAAE,CAAA,CACjC,CACH,MAEAD,EAAQ,KAAK,GAAGvC,CAAG,IAAI/B,CAAK,EAAE,CAEhC,CACA,OAAOsE,EAAQ,OAASD,EAASC,EAAQ,KAAK,GAAG,EAAI,EACtD,CAOA,SAASG,EAAMC,EAAOC,EAAW,IAAM,CACtCvE,EAAAA,MAAI,UAAU,CACb,MAAO,OAAOsE,CAAK,EACnB,KAAM,OACN,SAAAC,CAAA,CACA,CACF,CAOA,SAASC,EAAUC,EAAO,UAAWC,EAAO,GAAO,CAE9C,CAAC,UAAW,OAAQ,QAAS,UAAW,SAAS,EAAE,QAAQD,CAAI,GAAK,KAAWA,EAAA,WACnF,IAAIE,EAAW,GAEf,OAAQF,EAAM,CACb,IAAK,UACOE,EAAA,cACX,MACD,IAAK,OACOA,EAAA,cACX,MACD,IAAK,QACOA,EAAA,eACX,MACD,IAAK,UACOA,EAAA,eACX,MACD,IAAK,UACOA,EAAA,mBACX,MACD,QACYA,EAAA,kBACb,CAEI,OAAAD,IAAkBC,GAAA,SACfA,CACR,CAUA,SAASC,EAAY7E,EAAQ8E,EAAW,EAAGC,EAAe,IAAKC,EAAqB,IAAK,CACxFhF,EAAU,GAAGA,CAAM,GAAI,QAAQ,eAAgB,EAAE,EACjD,MAAMiF,EAAK,SAAS,CAACjF,CAAM,EAAQ,CAACA,EAAL,EACzBkF,EAAQ,SAAS,CAACJ,CAAQ,EAAQ,KAAK,IAAIA,CAAQ,EAArB,EAC9BK,EAAO,OAAOH,EAAuB,IAAe,IAAMA,EAC1DI,EAAO,OAAOL,EAAiB,IAAe,IAAMA,EAC1D,IAAIM,EAAI,GAERA,GAAKH,EAAOI,EAAAA,MAAML,EAAGC,CAAI,EAAI,GAAK,GAAG,KAAK,MAAMD,CAAC,CAAC,IAAI,MAAM,GAAG,EAC/D,MAAMM,EAAK,iBACX,KAAOA,EAAG,KAAKF,EAAE,CAAC,CAAC,GAChBA,EAAA,CAAC,EAAIA,EAAE,CAAC,EAAE,QAAQE,EAAI,KAAKJ,CAAG,IAAI,EAGrC,OAAKE,EAAE,CAAC,GAAK,IAAI,OAASH,IACzBG,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAK,GACfA,EAAE,CAAC,GAAK,IAAI,MAAMH,EAAOG,EAAE,CAAC,EAAE,OAAS,CAAC,EAAE,KAAK,GAAG,GAE5CA,EAAE,KAAKD,CAAG,CAClB,CAUA,SAASI,EAAY3F,EAAOE,EAAO,GAAM,CAClC,MAAA0F,EAAW,SAAS5F,CAAK,EAC/B,OAAIE,EACC,KAAK,KAAKF,CAAK,EAAUA,EACtBA,EAAQ,GAAK,GAAGA,CAAK,KAAO,GAAGA,CAAK,IAExC,MAAM,KAAKA,CAAK,EAAU4F,EAC1B,KAAK,KAAK5F,CAAK,EAAU4F,EAAW,GAAKA,EAAWA,EAAW,IAC5DA,CACR,CAMA,SAASC,EAAQ7F,EAAO,CACvB,MAAO,KAAKA,CAAK,GAAG,MAAM,EAAE,CAC7B,CAOA,SAAS8F,EAAaC,EAAUC,EAAO,CACtC,MAAMC,EAAW9E,EAAQ,KAAK4E,EAAU,cAAc,EAChDG,EAAO/E,EAAQ,KAAK4E,EAAU,SAAS,EAGzCE,GAAYC,GACVA,EAAA,cAAcD,EAAS,KAAM,IAAM,GAAID,CAAK,CAEnD,CAQA,SAASG,EAAYjE,EAAKH,EAAK,CAC9B,GAAKG,EAGL,IAAI,OAAOH,GAAQ,UAAYA,IAAQ,GAC/B,MAAA,GAER,GAAIA,EAAI,QAAQ,GAAG,IAAM,GAAI,CACtB,MAAAqE,EAAOrE,EAAI,MAAM,GAAG,EAC1B,IAAIsE,EAAWnE,EAAIkE,EAAK,CAAC,CAAC,GAAK,CAAA,EAE/B,QAASnF,EAAI,EAAGA,EAAImF,EAAK,OAAQnF,IAC5BoF,IACQA,EAAAA,EAASD,EAAKnF,CAAC,CAAC,GAGtB,OAAAoF,CACR,CACA,OAAOnE,EAAIH,CAAG,EACf,CAQA,SAASuE,EAAYpE,EAAKH,EAAK/B,EAAO,CACrC,GAAI,CAACkC,EACJ,OAGD,MAAMqE,EAAO,SAASC,EAAMJ,EAAMK,EAAG,CAEhC,GAAAL,EAAK,SAAW,EAAG,CACjBI,EAAAJ,EAAK,CAAC,CAAC,EAAIK,EAChB,MACD,CAEO,KAAAL,EAAK,OAAS,GAAG,CACjB,MAAAM,EAAIN,EAAK,CAAC,GACZ,CAACI,EAAKE,CAAC,GAAM,OAAOF,EAAKE,CAAC,GAAM,YAC9BF,EAAAE,CAAC,EAAI,IAECN,EAAK,MAAM,EAEvBG,EAAKC,EAAKE,CAAC,EAAGN,EAAMK,CAAC,CACtB,CAAA,EAGD,GAAI,SAAO1E,GAAQ,UAAYA,IAAQ,IAE5B,GAAAA,EAAI,QAAQ,GAAG,IAAM,GAAI,CAC7B,MAAAqE,EAAOrE,EAAI,MAAM,GAAG,EACrBwE,EAAArE,EAAKkE,EAAMpG,CAAK,CAAA,MAErBkC,EAAIH,CAAG,EAAI/B,CAEb,CAKA,SAAS2G,GAAO,OACf,MAAMC,EAAQ,kBACRC,GAAQD,EAAAA,EAAMA,EAAM,OAAS,CAAC,IAAtBA,YAAAA,EAAyB,MAEhC,MAAA,IAAIC,GAAgB,EAAE,EAC9B,CAKA,SAASD,GAAQ,CAETA,OADO,iBAEf,CAMA,SAASE,EAAeC,EAAO,EAAG,CACjC,MAAMH,EAAQ,kBACRhG,EAAMgG,EAAM,OACXA,OAAAA,EAAMhG,EAAM,EAAImG,CAAI,CAC5B,CAWA,SAASC,EAAU,CAClB,MAAAC,EAAQ,CAAC,EACT,OAAAC,EAAS,CAAC,EACV,MAAAC,EAAQ,CAAC,EACT,OAAAC,EAAS,CAAC,CACX,EAAG,CACI,KAAA,CACL,UAAA/E,CAAA,EACGjC,EAAAA,MAAI,IACRA,QAAI,IAAI,OAASiC,EAAUjC,EAAI,MAAA,IAAI,OAAQ8G,CAAM,EACjD9G,QAAI,IAAI,MAAQiC,EAAUjC,EAAI,MAAA,IAAI,MAAO6G,CAAK,EAC9C7G,QAAI,IAAI,MAAQiC,EAAUjC,EAAI,MAAA,IAAI,MAAO+G,CAAK,EAC9C/G,QAAI,IAAI,OAASiC,EAAUjC,EAAI,MAAA,IAAI,OAAQgH,CAAM,CAClD"}
{"version":3,"file":"value.js","sources":["uni_modules/uv-text/components/uv-text/value.js"],"sourcesContent":["import { func, date, url } from '@/uni_modules/uv-ui-tools/libs/function/test.js'\r\nimport { error, timeFormat, priceFormat } from '@/uni_modules/uv-ui-tools/libs/function/index.js'\r\nexport default {\r\n    computed: {\r\n        // 经处理后需要显示的值\r\n        value() {\r\n            const {\r\n                text,\r\n                mode,\r\n                format,\r\n                href\r\n            } = this\r\n            // 价格类型\r\n            if (mode === 'price') {\r\n                // 如果text不为金额进行提示\r\n                if (!/^\\d+(\\.\\d+)?$/.test(text)) {\r\n                    error('金额模式下，text参数需要为金额格式');\r\n                }\r\n                // 进行格式化，判断用户传入的format参数为正则，或者函数，如果没有传入format，则使用默认的金额格式化处理\r\n                if (func(format)) {\r\n                    // 如果用户传入的是函数，使用函数格式化\r\n                    return format(text)\r\n                }\r\n                // 如果format非正则，非函数，则使用默认的金额格式化方法进行操作\r\n                return priceFormat(text, 2)\r\n            } if (mode === 'date') {\r\n                // 判断是否合法的日期或者时间戳\r\n                !date(text) && error('日期模式下，text参数需要为日期或时间戳格式')\r\n                // 进行格式化，判断用户传入的format参数为正则，或者函数，如果没有传入format，则使用默认的格式化处理\r\n                if (func(format)) {\r\n                    // 如果用户传入的是函数，使用函数格式化\r\n                    return format(text)\r\n                } if (format) {\r\n                    // 如果format非正则，非函数，则使用默认的时间格式化方法进行操作\r\n                    return timeFormat(text, format)\r\n                }\r\n                // 如果没有设置format，则设置为默认的时间格式化形式\r\n                return timeFormat(text, 'yyyy-mm-dd')\r\n            } if (mode === 'phone') {\r\n                // 判断是否合法的手机号\r\n                // !mobile(text) && error('手机号模式下，text参数需要为手机号码格式')\r\n                if (func(format)) {\r\n                    // 如果用户传入的是函数，使用函数格式化\r\n                    return format(text)\r\n                } if (format === 'encrypt') {\r\n                    // 如果format为encrypt，则将手机号进行星号加密处理\r\n                    return `${text.substr(0, 3)}****${text.substr(7)}`\r\n                }\r\n                return text\r\n            } if (mode === 'name') {\r\n                // 判断是否合法的字符粗\r\n                !(typeof (text) === 'string') && error('姓名模式下，text参数需要为字符串格式')\r\n                if (func(format)) {\r\n                    // 如果用户传入的是函数，使用函数格式化\r\n                    return format(text)\r\n                } if (format === 'encrypt') {\r\n                    // 如果format为encrypt，则将姓名进行星号加密处理\r\n                    return this.formatName(text)\r\n                }\r\n                return text\r\n            } if (mode === 'link') {\r\n                // 判断是否合法的字符粗\r\n                !url(href) && error('超链接模式下，href参数需要为URL格式')\r\n                return text\r\n            }\r\n            return text\r\n        }\r\n    },\r\n    methods: {\r\n        // 默认的姓名脱敏规则\r\n        formatName(name) {\r\n            let value = ''\r\n            if (name.length === 2) {\r\n                value = name.substr(0, 1) + '*'\r\n            } else if (name.length > 2) {\r\n                let char = ''\r\n                for (let i = 0, len = name.length - 2; i < len; i++) {\r\n                    char += '*'\r\n                }\r\n                value = name.substr(0, 1) + char + name.substr(-1, 1)\r\n            } else {\r\n                value = name\r\n            }\r\n            return value\r\n        }\r\n    }\r\n}\r\n"],"names":["value","text","mode","format","href","error","func","priceFormat","date","timeFormat","url","name","char","i","len"],"mappings":"oIAEeA,EAAA,CACX,SAAU,CAEN,OAAQ,CACJ,KAAM,CACF,KAAAC,EACA,KAAAC,EACA,OAAAC,EACA,KAAAC,CAChB,EAAgB,KAEJ,OAAIF,IAAS,SAEJ,gBAAgB,KAAKD,CAAI,GAC1BI,EAAK,MAAC,qBAAqB,EAG3BC,EAAAA,KAAKH,CAAM,EAEJA,EAAOF,CAAI,EAGfM,EAAW,YAACN,EAAM,CAAC,GACxBC,IAAS,QAEX,CAACM,OAAKP,CAAI,GAAKI,EAAAA,MAAM,yBAAyB,EAE1CC,EAAAA,KAAKH,CAAM,EAEJA,EAAOF,CAAI,EAChBE,EAEKM,EAAU,WAACR,EAAME,CAAM,EAG3BM,EAAU,WAACR,EAAM,YAAY,GAClCC,IAAS,QAGPI,EAAAA,KAAKH,CAAM,EAEJA,EAAOF,CAAI,EAChBE,IAAW,UAEN,GAAGF,EAAK,OAAO,EAAG,CAAC,CAAC,OAAOA,EAAK,OAAO,CAAC,CAAC,GAE7CA,EACLC,IAAS,QAET,OAAQD,GAAU,UAAaI,EAAAA,MAAM,sBAAsB,EACzDC,EAAAA,KAAKH,CAAM,EAEJA,EAAOF,CAAI,EAChBE,IAAW,UAEN,KAAK,WAAWF,CAAI,EAExBA,IACLC,IAAS,QAEX,CAACQ,MAAIN,CAAI,GAAKC,EAAAA,MAAM,uBAAuB,EACpCJ,EAGd,CACJ,EACD,QAAS,CAEL,WAAWU,EAAM,CACb,IAAIX,EAAQ,GACZ,GAAIW,EAAK,SAAW,EAChBX,EAAQW,EAAK,OAAO,EAAG,CAAC,EAAI,YACrBA,EAAK,OAAS,EAAG,CACxB,IAAIC,EAAO,GACX,QAASC,EAAI,EAAGC,EAAMH,EAAK,OAAS,EAAGE,EAAIC,EAAKD,IAC5CD,GAAQ,IAEZZ,EAAQW,EAAK,OAAO,EAAG,CAAC,EAAIC,EAAOD,EAAK,OAAO,GAAI,CAAC,CACpE,MACgBX,EAAQW,EAEZ,OAAOX,CACV,CACJ,CACL"}
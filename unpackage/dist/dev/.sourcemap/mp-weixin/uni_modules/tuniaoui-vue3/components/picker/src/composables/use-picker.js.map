{"version":3,"file":"use-picker.js","sources":["uni_modules/tuniaoui-vue3/components/picker/src/composables/use-picker.ts"],"sourcesContent":["import { getCurrentInstance, nextTick, ref, watch } from 'vue'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../../constants'\nimport {\n  cloneDeep,\n  isArray,\n  isEmptyVariableInDefault,\n  isObject,\n  throwError,\n} from '../../../../utils'\n\nimport type {\n  PickerDataType,\n  PickerMode,\n  PickerProps,\n  PickerValueType,\n} from '../picker'\n\ntype PickerData = Array<Array<PickerDataItem>>\ninterface PickerDataItem {\n  label: string | number\n  value: string | number\n  originalData: any\n  children?: Array<PickerDataItem>\n}\n\nexport const usePicker = (props: PickerProps) => {\n  const { emit } = getCurrentInstance()!\n\n  // 显示popup弹框\n  const openPopup = ref(false)\n  const showPicker = ref(true)\n  // #ifdef MP-ALIPAY\n  showPicker.value = false\n  // #endif\n  watch(\n    () => props.open,\n    (value) => {\n      openPopup.value = value\n      // #ifdef MP-ALIPAY\n      if (value) {\n        setTimeout(() => {\n          nextTick(() => {\n            showPicker.value = value\n          })\n        }, 350)\n      }\n      // #endif\n    }\n  )\n  const _closePopup = () => {\n    // #ifdef MP-ALIPAY\n    showPicker.value = false\n    // #endif\n    emit('update:open', false)\n  }\n  // 关闭popup弹框\n  const closePopupEvent = () => {\n    _closePopup()\n    _generatePickerViewData(props.modelValue)\n    emit('close')\n  }\n\n  // picker选择器类型\n  let pickerMode: PickerMode = 'signle'\n\n  // 生成指定格式的数据\n  const _generateData = (\n    data: PickerDataType\n  ): Pick<PickerDataItem, 'label' | 'value' | 'originalData'> => {\n    if (isObject(data)) {\n      const originalData = cloneDeep(data)\n      if (\n        Object.prototype.hasOwnProperty.call(originalData, props.childrenKey)\n      ) {\n        delete originalData[props.childrenKey]\n      }\n      return {\n        label: data[props.labelKey],\n        value: data[props.valueKey],\n        originalData,\n      }\n    } else {\n      return {\n        label: data as string | number,\n        value: data as string | number,\n        originalData: data,\n      }\n    }\n  }\n\n  // 更新/生成级联选择器的数据\n  const _generateOrUpdateCascadeData = (\n    data: any[],\n    generateIndex = 1,\n    defaultValue: Array<string | number> = []\n  ) => {\n    // 判断生成的的级联数据是否已经有数据，如果有数据则更新，否则生成\n    if (pickerData.value.length < generateIndex) {\n      pickerData.value.push(\n        ...Array.from(\n          { length: generateIndex - pickerData.value.length },\n          () => []\n        )\n      )\n    }\n\n    pickerData.value[generateIndex - 1] = [\n      ...data.map((item) => _generateData(item)),\n    ]\n    // 判断从第几个子级开始生成级联数据\n    let childrenIndex = 0\n    if (defaultValue.length) {\n      childrenIndex = pickerData.value[generateIndex - 1].findIndex(\n        (item) => item.value === defaultValue[generateIndex - 1]\n      )\n      childrenIndex = ~childrenIndex ? childrenIndex : 0\n    }\n    if (\n      data[childrenIndex] &&\n      Object.prototype.hasOwnProperty.call(\n        data[childrenIndex],\n        props.childrenKey\n      )\n    ) {\n      _generateOrUpdateCascadeData(\n        data[childrenIndex][props.childrenKey] as PickerDataItem[],\n        generateIndex + 1,\n        defaultValue\n      )\n    }\n  }\n\n  // picker选择器的数据\n  const pickerData = ref<PickerData>([])\n  // 当前选中picker-view的索引\n  const currentPickerIndex = ref<Array<number>>([])\n  // 初始化选中的默认Index\n  const initDefaultPickerIndex = () => {\n    let indexValue: number[] = []\n    // 如果没有设置默认值，则默认选中第一项\n    if (\n      props.modelValue === undefined ||\n      (!props.modelValue && ['multiple', 'cascade'].includes(pickerMode)) ||\n      (isArray(props.modelValue) && !props.modelValue.length)\n    ) {\n      indexValue = Array.from({ length: pickerData.value.length }, () => 0)\n    } else {\n      if (isArray(props.modelValue)) {\n        indexValue = pickerData.value.map((item, index) => {\n          let pickerIndex = 0\n          if (!(props.modelValue as (string | number)[])[index]) pickerIndex = 0\n          else {\n            pickerIndex = item.findIndex((childItem) => {\n              return (\n                childItem.value ===\n                (props.modelValue as (string | number)[])[index]\n              )\n            })\n          }\n          return ~pickerIndex ? pickerIndex : 0\n        })\n      } else {\n        indexValue = pickerData.value.map((_, k: number) => {\n          const index = pickerData.value[k].findIndex(\n            (item) => item.value === props.modelValue\n          )\n          return index === -1 ? 0 : index\n        })\n      }\n    }\n    currentPickerIndex.value = indexValue\n  }\n  // 处理用户传递的数据\n  const splitUserPickerData = () => {\n    const { data } = props\n    if (!data) return\n    // 判断用户是否有传递数据，并且数据格式是否正确\n    if (!isArray(data)) {\n      throwError('TnPicker', 'picker选择器数据不正确，请传递数组格式的数据')\n    }\n\n    if (data.length === 0) return\n\n    // 根据用户传递的数据来判断是什么类型的选择器\n    if (isArray(data[0])) {\n      // 多选选择器\n      pickerMode = 'multiple'\n      pickerData.value = (data as PickerDataType[][]).reduce(\n        (prev: PickerData, cur: Array<PickerDataType>) => {\n          prev.push(cur.map((item) => _generateData(item)))\n          return prev\n        },\n        []\n      )\n    } else if (\n      !isArray(data[0]) &&\n      isObject(data[0]) &&\n      Object.prototype.hasOwnProperty.call(data[0], props.childrenKey)\n    ) {\n      // 级联选择器\n      pickerMode = 'cascade'\n      _generateOrUpdateCascadeData(\n        data as PickerDataItem[],\n        1,\n        props.modelValue as Array<string | number>\n      )\n    } else {\n      // 单列选择器\n      pickerMode = 'signle'\n      pickerData.value = [data.map((item) => _generateData(item))]\n    }\n    // console.log(JSON.stringify(pickerData.value))\n    nextTick(() => {\n      initDefaultPickerIndex()\n    })\n  }\n  watch(\n    () => props.data,\n    () => {\n      splitUserPickerData()\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  // 获取当前选中的值\n  const _getCurrentPickerValue = (): PickerValueType => {\n    if (pickerMode === 'signle' && !isArray((props.data as any[])[0])) {\n      return pickerData.value[0][currentPickerIndex.value[0]].value\n    } else {\n      // currentPickerIndex.value.splice(pickerData.value.length)\n      const pickerIndex = cloneDeep(currentPickerIndex.value)\n      pickerIndex.splice(pickerData.value.length)\n      return pickerIndex.map((item, index) =>\n        isEmptyVariableInDefault(pickerData.value[index][item]?.value, 0)\n      )\n    }\n  }\n\n  // 根据用户选中的索引获取当前用户传入的数据\n  const _getCurrentPickerOriginData = (): any => {\n    if (pickerMode === 'signle' && !isArray((props.data as any[])[0])) {\n      return pickerData.value[0][currentPickerIndex.value[0]].originalData\n    } else {\n      // currentPickerIndex.value.splice(pickerData.value.length)\n      const pickerIndex = cloneDeep(currentPickerIndex.value)\n      pickerIndex.splice(pickerData.value.length)\n      return pickerIndex.map((item, index) =>\n        isEmptyVariableInDefault(\n          pickerData.value[index][item]?.originalData,\n          undefined\n        )\n      )\n    }\n  }\n\n  // 生成picker-view的数据\n  const _generatePickerViewData = (val: any) => {\n    // 如果是级联选择器，对应的级联数据也要更新\n    if (pickerMode === 'cascade') {\n      _generateOrUpdateCascadeData(\n        props.data as PickerDataItem[],\n        1,\n        val as Array<string | number>\n      )\n    }\n    nextTick(() => {\n      initDefaultPickerIndex()\n    })\n  }\n\n  // 标记是否内部更新\n  let isInnerUpdate = false\n  watch(\n    () => props.modelValue,\n    (val) => {\n      if (isInnerUpdate) {\n        isInnerUpdate = false\n        return\n      }\n      _generatePickerViewData(val)\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // picker-view选择发生改变事件\n  let changeTimer: ReturnType<typeof setTimeout> | null = null\n  let continuousChangeStatus = false\n  const pickerViewChangeEvent = (e: any) => {\n    if (continuousChangeStatus) {\n      return\n    }\n    changeTimer = setTimeout(() => {\n      continuousChangeStatus = false\n      changeTimer && clearTimeout(changeTimer)\n      changeTimer = null\n    }, 300)\n    continuousChangeStatus = true\n    // 比较上一次的值，判断是那一列发生了改变\n    let changePickerColumnIndex = currentPickerIndex.value.findIndex(\n      (item, index) => item !== e.detail.value[index]\n    )\n    changePickerColumnIndex = ~changePickerColumnIndex\n      ? changePickerColumnIndex\n      : 0\n    currentPickerIndex.value = e.detail.value\n\n    // 如果是级联选择器，对应的列有children的值，则需要更新后面的数据，并且重置后面选中的索引\n    if (pickerMode === 'cascade') {\n      let data: any[] = props.data as any[]\n      for (let i = 0; i < changePickerColumnIndex; i++) {\n        data = data[currentPickerIndex.value[i]][props.childrenKey]\n      }\n      const pickerIndex = currentPickerIndex.value[changePickerColumnIndex]\n      pickerData.value.splice(changePickerColumnIndex + 1)\n      if (\n        data[pickerIndex] &&\n        Object.prototype.hasOwnProperty.call(\n          data[pickerIndex],\n          props.childrenKey\n        )\n      ) {\n        _generateOrUpdateCascadeData(\n          data[pickerIndex][props.childrenKey] as PickerDataItem[],\n          changePickerColumnIndex + 2\n        )\n        currentPickerIndex.value = pickerData.value.map((item, index) => {\n          return index <= changePickerColumnIndex\n            ? currentPickerIndex.value[index]\n            : 0\n        })\n      }\n    }\n\n    isInnerUpdate = true\n    const value = _getCurrentPickerValue()\n    const originData = _getCurrentPickerOriginData()\n    emit(CHANGE_EVENT, value, changePickerColumnIndex, originData)\n    // emit(UPDATE_MODEL_EVENT, value)\n  }\n\n  // 重置指定位置的数据\n  const resetPickerIndexWithPosition = (start: number, end?: number) => {\n    currentPickerIndex.value = currentPickerIndex.value.map((item, index) => {\n      return index >= start && (!end || index <= end) ? 0 : item\n    })\n  }\n\n  // 点击确认按钮\n  const confirmEvent = () => {\n    const value = _getCurrentPickerValue()\n    const originData = _getCurrentPickerOriginData()\n    isInnerUpdate = true\n    emit(UPDATE_MODEL_EVENT, value)\n    nextTick(() => {\n      emit('confirm', value, originData)\n    })\n\n    _closePopup()\n  }\n\n  // 点击取消按钮\n  const cancelEvent = () => {\n    _generatePickerViewData(props.modelValue)\n    emit('cancel')\n    _closePopup()\n  }\n\n  return {\n    openPopup,\n    showPicker,\n    pickerData,\n    currentPickerIndex,\n    closePopupEvent,\n    pickerViewChangeEvent,\n    confirmEvent,\n    cancelEvent,\n    initDefaultPickerIndex,\n    resetPickerIndexWithPosition,\n  }\n}\n"],"names":["getCurrentInstance","ref","watch","isObject","cloneDeep","isArray","throwError","nextTick","isEmptyVariableInDefault","CHANGE_EVENT","UPDATE_MODEL_EVENT"],"mappings":"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"}
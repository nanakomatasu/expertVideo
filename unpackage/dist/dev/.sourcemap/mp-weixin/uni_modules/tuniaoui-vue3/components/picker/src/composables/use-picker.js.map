{"version":3,"file":"use-picker.js","sources":["uni_modules/tuniaoui-vue3/components/picker/src/composables/use-picker.ts"],"sourcesContent":["import { getCurrentInstance, nextTick, ref, watch } from 'vue'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../../constants'\nimport {\n  cloneDeep,\n  isArray,\n  isEmptyVariableInDefault,\n  isObject,\n  throwError,\n} from '../../../../utils'\n\nimport type {\n  PickerDataType,\n  PickerMode,\n  PickerProps,\n  PickerValueType,\n} from '../picker'\n\ntype PickerData = Array<Array<PickerDataItem>>\ninterface PickerDataItem {\n  label: string | number\n  value: string | number\n  originalData: any\n  children?: Array<PickerDataItem>\n}\n\nexport const usePicker = (props: PickerProps) => {\n  const { emit } = getCurrentInstance()!\n\n  // 显示popup弹框\n  const openPopup = ref(false)\n  const showPicker = ref(true)\n  // #ifdef MP-ALIPAY\n  showPicker.value = false\n  // #endif\n  watch(\n    () => props.open,\n    (value) => {\n      openPopup.value = value\n      // #ifdef MP-ALIPAY\n      if (value) {\n        setTimeout(() => {\n          nextTick(() => {\n            showPicker.value = value\n          })\n        }, 350)\n      }\n      // #endif\n    }\n  )\n  const _closePopup = () => {\n    // #ifdef MP-ALIPAY\n    showPicker.value = false\n    // #endif\n    emit('update:open', false)\n  }\n  // 关闭popup弹框\n  const closePopupEvent = () => {\n    _closePopup()\n    _generatePickerViewData(props.modelValue)\n    emit('close')\n  }\n\n  // picker选择器类型\n  let pickerMode: PickerMode = 'signle'\n\n  // 生成指定格式的数据\n  const _generateData = (\n    data: PickerDataType\n  ): Pick<PickerDataItem, 'label' | 'value' | 'originalData'> => {\n    if (isObject(data)) {\n      const originalData = cloneDeep(data)\n      if (\n        Object.prototype.hasOwnProperty.call(originalData, props.childrenKey)\n      ) {\n        delete originalData[props.childrenKey]\n      }\n      return {\n        label: data[props.labelKey],\n        value: data[props.valueKey],\n        originalData,\n      }\n    } else {\n      return {\n        label: data as string | number,\n        value: data as string | number,\n        originalData: data,\n      }\n    }\n  }\n\n  // 更新/生成级联选择器的数据\n  const _generateOrUpdateCascadeData = (\n    data: any[],\n    generateIndex = 1,\n    defaultValue: Array<string | number> = []\n  ) => {\n    // 判断生成的的级联数据是否已经有数据，如果有数据则更新，否则生成\n    if (pickerData.value.length < generateIndex) {\n      pickerData.value.push(\n        ...Array.from(\n          { length: generateIndex - pickerData.value.length },\n          () => []\n        )\n      )\n    }\n\n    pickerData.value[generateIndex - 1] = [\n      ...data.map((item) => _generateData(item)),\n    ]\n    // 判断从第几个子级开始生成级联数据\n    let childrenIndex = 0\n    if (defaultValue.length) {\n      childrenIndex = pickerData.value[generateIndex - 1].findIndex(\n        (item) => item.value === defaultValue[generateIndex - 1]\n      )\n      childrenIndex = ~childrenIndex ? childrenIndex : 0\n    }\n    if (\n      data[childrenIndex] &&\n      Object.prototype.hasOwnProperty.call(\n        data[childrenIndex],\n        props.childrenKey\n      )\n    ) {\n      _generateOrUpdateCascadeData(\n        data[childrenIndex][props.childrenKey] as PickerDataItem[],\n        generateIndex + 1,\n        defaultValue\n      )\n    }\n  }\n\n  // picker选择器的数据\n  const pickerData = ref<PickerData>([])\n  // 当前选中picker-view的索引\n  const currentPickerIndex = ref<Array<number>>([])\n  // 初始化选中的默认Index\n  const initDefaultPickerIndex = () => {\n    let indexValue: number[] = []\n    // 如果没有设置默认值，则默认选中第一项\n    if (\n      props.modelValue === undefined ||\n      (!props.modelValue && ['multiple', 'cascade'].includes(pickerMode)) ||\n      (isArray(props.modelValue) && !props.modelValue.length)\n    ) {\n      indexValue = Array.from({ length: pickerData.value.length }, () => 0)\n    } else {\n      if (isArray(props.modelValue)) {\n        indexValue = pickerData.value.map((item, index) => {\n          let pickerIndex = 0\n          if (!(props.modelValue as (string | number)[])[index]) pickerIndex = 0\n          else {\n            pickerIndex = item.findIndex((childItem) => {\n              return (\n                childItem.value ===\n                (props.modelValue as (string | number)[])[index]\n              )\n            })\n          }\n          return ~pickerIndex ? pickerIndex : 0\n        })\n      } else {\n        indexValue = pickerData.value.map((_, k: number) => {\n          const index = pickerData.value[k].findIndex(\n            (item) => item.value === props.modelValue\n          )\n          return index === -1 ? 0 : index\n        })\n      }\n    }\n    currentPickerIndex.value = indexValue\n  }\n  // 处理用户传递的数据\n  const splitUserPickerData = () => {\n    const { data } = props\n    if (!data) return\n    // 判断用户是否有传递数据，并且数据格式是否正确\n    if (!isArray(data)) {\n      throwError('TnPicker', 'picker选择器数据不正确，请传递数组格式的数据')\n    }\n\n    if (data.length === 0) return\n\n    // 根据用户传递的数据来判断是什么类型的选择器\n    if (isArray(data[0])) {\n      // 多选选择器\n      pickerMode = 'multiple'\n      pickerData.value = (data as PickerDataType[][]).reduce(\n        (prev: PickerData, cur: Array<PickerDataType>) => {\n          prev.push(cur.map((item) => _generateData(item)))\n          return prev\n        },\n        []\n      )\n    } else if (\n      !isArray(data[0]) &&\n      isObject(data[0]) &&\n      Object.prototype.hasOwnProperty.call(data[0], props.childrenKey)\n    ) {\n      // 级联选择器\n      pickerMode = 'cascade'\n      _generateOrUpdateCascadeData(\n        data as PickerDataItem[],\n        1,\n        props.modelValue as Array<string | number>\n      )\n    } else {\n      // 单列选择器\n      pickerMode = 'signle'\n      pickerData.value = [data.map((item) => _generateData(item))]\n    }\n    // console.log(JSON.stringify(pickerData.value))\n    nextTick(() => {\n      initDefaultPickerIndex()\n    })\n  }\n  watch(\n    () => props.data,\n    () => {\n      splitUserPickerData()\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  // 获取当前选中的值\n  const _getCurrentPickerValue = (): PickerValueType => {\n    if (pickerMode === 'signle' && !isArray((props.data as any[])[0])) {\n      return pickerData.value[0][currentPickerIndex.value[0]].value\n    } else {\n      // currentPickerIndex.value.splice(pickerData.value.length)\n      const pickerIndex = cloneDeep(currentPickerIndex.value)\n      pickerIndex.splice(pickerData.value.length)\n      return pickerIndex.map((item, index) =>\n        isEmptyVariableInDefault(pickerData.value[index][item]?.value, 0)\n      )\n    }\n  }\n\n  // 根据用户选中的索引获取当前用户传入的数据\n  const _getCurrentPickerOriginData = (): any => {\n    if (pickerMode === 'signle' && !isArray((props.data as any[])[0])) {\n      return pickerData.value[0][currentPickerIndex.value[0]].originalData\n    } else {\n      // currentPickerIndex.value.splice(pickerData.value.length)\n      const pickerIndex = cloneDeep(currentPickerIndex.value)\n      pickerIndex.splice(pickerData.value.length)\n      return pickerIndex.map((item, index) =>\n        isEmptyVariableInDefault(\n          pickerData.value[index][item]?.originalData,\n          undefined\n        )\n      )\n    }\n  }\n\n  // 生成picker-view的数据\n  const _generatePickerViewData = (val: any) => {\n    // 如果是级联选择器，对应的级联数据也要更新\n    if (pickerMode === 'cascade') {\n      _generateOrUpdateCascadeData(\n        props.data as PickerDataItem[],\n        1,\n        val as Array<string | number>\n      )\n    }\n    nextTick(() => {\n      initDefaultPickerIndex()\n    })\n  }\n\n  // 标记是否内部更新\n  let isInnerUpdate = false\n  watch(\n    () => props.modelValue,\n    (val) => {\n      if (isInnerUpdate) {\n        isInnerUpdate = false\n        return\n      }\n      _generatePickerViewData(val)\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // picker-view选择发生改变事件\n  let changeTimer: ReturnType<typeof setTimeout> | null = null\n  let continuousChangeStatus = false\n  const pickerViewChangeEvent = (e: any) => {\n    if (continuousChangeStatus) {\n      return\n    }\n    changeTimer = setTimeout(() => {\n      continuousChangeStatus = false\n      changeTimer && clearTimeout(changeTimer)\n      changeTimer = null\n    }, 300)\n    continuousChangeStatus = true\n    // 比较上一次的值，判断是那一列发生了改变\n    let changePickerColumnIndex = currentPickerIndex.value.findIndex(\n      (item, index) => item !== e.detail.value[index]\n    )\n    changePickerColumnIndex = ~changePickerColumnIndex\n      ? changePickerColumnIndex\n      : 0\n    currentPickerIndex.value = e.detail.value\n\n    // 如果是级联选择器，对应的列有children的值，则需要更新后面的数据，并且重置后面选中的索引\n    if (pickerMode === 'cascade') {\n      let data: any[] = props.data as any[]\n      for (let i = 0; i < changePickerColumnIndex; i++) {\n        data = data[currentPickerIndex.value[i]][props.childrenKey]\n      }\n      const pickerIndex = currentPickerIndex.value[changePickerColumnIndex]\n      pickerData.value.splice(changePickerColumnIndex + 1)\n      if (\n        data[pickerIndex] &&\n        Object.prototype.hasOwnProperty.call(\n          data[pickerIndex],\n          props.childrenKey\n        )\n      ) {\n        _generateOrUpdateCascadeData(\n          data[pickerIndex][props.childrenKey] as PickerDataItem[],\n          changePickerColumnIndex + 2\n        )\n        currentPickerIndex.value = pickerData.value.map((item, index) => {\n          return index <= changePickerColumnIndex\n            ? currentPickerIndex.value[index]\n            : 0\n        })\n      }\n    }\n\n    isInnerUpdate = true\n    const value = _getCurrentPickerValue()\n    const originData = _getCurrentPickerOriginData()\n    emit(CHANGE_EVENT, value, changePickerColumnIndex, originData)\n    // emit(UPDATE_MODEL_EVENT, value)\n  }\n\n  // 重置指定位置的数据\n  const resetPickerIndexWithPosition = (start: number, end?: number) => {\n    currentPickerIndex.value = currentPickerIndex.value.map((item, index) => {\n      return index >= start && (!end || index <= end) ? 0 : item\n    })\n  }\n\n  // 点击确认按钮\n  const confirmEvent = () => {\n    const value = _getCurrentPickerValue()\n    const originData = _getCurrentPickerOriginData()\n    isInnerUpdate = true\n    emit(UPDATE_MODEL_EVENT, value)\n    nextTick(() => {\n      emit('confirm', value, originData)\n    })\n\n    _closePopup()\n  }\n\n  // 点击取消按钮\n  const cancelEvent = () => {\n    _generatePickerViewData(props.modelValue)\n    emit('cancel')\n    _closePopup()\n  }\n\n  return {\n    openPopup,\n    showPicker,\n    pickerData,\n    currentPickerIndex,\n    closePopupEvent,\n    pickerViewChangeEvent,\n    confirmEvent,\n    cancelEvent,\n    initDefaultPickerIndex,\n    resetPickerIndexWithPosition,\n  }\n}\n"],"names":["usePicker","props","emit","getCurrentInstance","openPopup","ref","showPicker","watch","value","_closePopup","closePopupEvent","_generatePickerViewData","pickerMode","_generateData","data","isObject","originalData","cloneDeep","_generateOrUpdateCascadeData","generateIndex","defaultValue","pickerData","item","childrenIndex","currentPickerIndex","initDefaultPickerIndex","indexValue","isArray","index","pickerIndex","childItem","_","k","splitUserPickerData","throwError","prev","cur","nextTick","_getCurrentPickerValue","isEmptyVariableInDefault","_a","_getCurrentPickerOriginData","val","isInnerUpdate","changeTimer","continuousChangeStatus","changePickerColumnIndex","i","originData","CHANGE_EVENT","UPDATE_MODEL_EVENT","start","end"],"mappings":"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"}
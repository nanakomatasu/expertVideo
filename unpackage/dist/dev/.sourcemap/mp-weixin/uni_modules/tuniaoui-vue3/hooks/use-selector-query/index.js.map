{"version":3,"file":"index.js","sources":["uni_modules/tuniaoui-vue3/hooks/use-selector-query/index.ts"],"sourcesContent":["import { getCurrentInstance } from 'vue'\nimport { debugWarn } from '../../utils'\n\nimport type { ComponentInternalInstance } from 'vue'\n\nexport const useSelectorQuery = (\n  instance?: ComponentInternalInstance | null\n) => {\n  let query: UniApp.SelectorQuery | null = null\n\n  if (!instance) {\n    instance = getCurrentInstance()\n  }\n  if (!instance) {\n    debugWarn('useSelectorQuery', 'useSelectorQuery必须在setup函数中使用')\n  }\n\n  // #ifndef MP-ALIPAY || APP-PLUS\n  query = uni.createSelectorQuery().in(instance)\n  // #endif\n  // #ifdef APP-PLUS\n  query = uni.createSelectorQuery().in((instance as any).ctx.$scope)\n  // #endif\n  // #ifdef MP-ALIPAY\n  query = uni.createSelectorQuery().in(null)\n  // #endif\n\n  const getSelectorNodeInfo = (selector: string): Promise<UniApp.NodeInfo> => {\n    return new Promise((resolve, reject) => {\n      if (query) {\n        query\n          .select(selector)\n          .boundingClientRect((res) => {\n            const selectRes: UniApp.NodeInfo = res as UniApp.NodeInfo\n            if (selectRes) {\n              resolve(selectRes)\n            } else {\n              reject(new Error(`未找到对应节点: ${selector}`))\n            }\n          })\n          .exec()\n      } else {\n        reject(new Error('未找到对应的SelectorQuery实例'))\n      }\n    })\n  }\n\n  const getSelectorNodeInfos = (\n    selector: string\n  ): Promise<UniApp.NodeInfo[]> => {\n    return new Promise((resolve, reject) => {\n      if (query) {\n        query\n          .selectAll(selector)\n          .boundingClientRect((res) => {\n            const selectRes: UniApp.NodeInfo[] = res as UniApp.NodeInfo[]\n            if (selectRes && selectRes.length > 0) {\n              resolve(selectRes)\n            } else {\n              reject(new Error(`未找到对应节点: ${selector}`))\n            }\n          })\n          .exec()\n      } else {\n        reject(new Error('未找到对应的SelectorQuery实例'))\n      }\n    })\n  }\n\n  return {\n    query,\n    getSelectorNodeInfo,\n    getSelectorNodeInfos,\n  }\n}\n"],"names":["useSelectorQuery","instance","query","getCurrentInstance","debugWarn","uni","selector","resolve","reject","res","selectRes"],"mappings":"mJAKaA,EACXC,GACG,CACH,IAAIC,EAAqC,KAEzC,OAAKD,IACHA,EAAWE,EAAmB,mBAAA,GAE3BF,GACHG,YAAU,mBAAoB,+BAA+B,EAI/DF,EAAQG,EAAAA,MAAI,oBAAsB,EAAA,GAAGJ,CAAQ,EAmDtC,CACL,MAAAC,EACA,oBA5C2BI,GACpB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAClCN,EACFA,EACG,OAAOI,CAAQ,EACf,mBAAoBG,GAAQ,CAC3B,MAAMC,EAA6BD,EAC/BC,EACFH,EAAQG,CAAS,EAEjBF,EAAO,IAAI,MAAM,YAAYF,CAAQ,EAAE,CAAC,CAC1C,CACD,EACA,KAAK,EAEDE,EAAA,IAAI,MAAM,uBAAuB,CAAC,CAC3C,CACD,EA4BD,qBAxBAF,GAEO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAClCN,EACFA,EACG,UAAUI,CAAQ,EAClB,mBAAoBG,GAAQ,CAC3B,MAAMC,EAA+BD,EACjCC,GAAaA,EAAU,OAAS,EAClCH,EAAQG,CAAS,EAEjBF,EAAO,IAAI,MAAM,YAAYF,CAAQ,EAAE,CAAC,CAC1C,CACD,EACA,KAAK,EAEDE,EAAA,IAAI,MAAM,uBAAuB,CAAC,CAC3C,CACD,CAMD,CAEJ"}
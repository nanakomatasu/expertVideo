{"version":3,"file":"parser.js","sources":["uni_modules/uv-parse/components/uv-parse/parser.js"],"sourcesContent":["/**\r\n * @fileoverview html 解析器\r\n */\r\n\r\n// 配置\r\nconst config = {\r\n  // 信任的标签（保持标签名不变）\r\n  trustTags: makeMap('a,abbr,ad,audio,b,blockquote,br,code,col,colgroup,dd,del,dl,dt,div,em,fieldset,h1,h2,h3,h4,h5,h6,hr,i,img,ins,label,legend,li,ol,p,q,ruby,rt,source,span,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,title,ul,video'),\r\n\r\n  // 块级标签（转为 div，其他的非信任标签转为 span）\r\n  blockTags: makeMap('address,article,aside,body,caption,center,cite,footer,header,html,nav,pre,section'),\r\n\r\n  // #ifdef (MP-WEIXIN || MP-QQ || APP-PLUS || MP-360) && VUE3\r\n  // 行内标签\r\n  inlineTags: makeMap('abbr,b,big,code,del,em,i,ins,label,q,small,span,strong,sub,sup'),\r\n  // #endif\r\n\r\n  // 要移除的标签\r\n  ignoreTags: makeMap('area,base,canvas,embed,frame,head,iframe,input,link,map,meta,param,rp,script,source,style,textarea,title,track,wbr'),\r\n\r\n  // 自闭合的标签\r\n  voidTags: makeMap('area,base,br,col,circle,ellipse,embed,frame,hr,img,input,line,link,meta,param,path,polygon,rect,source,track,use,wbr'),\r\n\r\n  // html 实体\r\n  entities: {\r\n    lt: '<',\r\n    gt: '>',\r\n    quot: '\"',\r\n    apos: \"'\",\r\n    ensp: '\\u2002',\r\n    emsp: '\\u2003',\r\n    nbsp: '\\xA0',\r\n    semi: ';',\r\n    ndash: '–',\r\n    mdash: '—',\r\n    middot: '·',\r\n    lsquo: '‘',\r\n    rsquo: '’',\r\n    ldquo: '“',\r\n    rdquo: '”',\r\n    bull: '•',\r\n    hellip: '…',\r\n    larr: '←',\r\n    uarr: '↑',\r\n    rarr: '→',\r\n    darr: '↓'\r\n  },\r\n\r\n  // 默认的标签样式\r\n  tagStyle: {\r\n    // #ifndef APP-PLUS-NVUE\r\n    address: 'font-style:italic',\r\n    big: 'display:inline;font-size:1.2em',\r\n    caption: 'display:table-caption;text-align:center',\r\n    center: 'text-align:center',\r\n    cite: 'font-style:italic',\r\n    dd: 'margin-left:40px',\r\n    mark: 'background-color:yellow',\r\n    pre: 'font-family:monospace;white-space:pre',\r\n    s: 'text-decoration:line-through',\r\n    small: 'display:inline;font-size:0.8em',\r\n    strike: 'text-decoration:line-through',\r\n    u: 'text-decoration:underline'\r\n    // #endif\r\n  },\r\n\r\n  // svg 大小写对照表\r\n  svgDict: {\r\n    animatetransform: 'animateTransform',\r\n    lineargradient: 'linearGradient',\r\n    viewbox: 'viewBox',\r\n    attributename: 'attributeName',\r\n    repeatcount: 'repeatCount',\r\n    repeatdur: 'repeatDur'\r\n  }\r\n}\r\nconst tagSelector={}\r\nconst {\r\n  windowWidth,\r\n  // #ifdef MP-WEIXIN\r\n  system\r\n  // #endif\r\n} = uni.getSystemInfoSync()\r\nconst blankChar = makeMap(' ,\\r,\\n,\\t,\\f')\r\nlet idIndex = 0\r\n\r\n// #ifdef H5 || APP-PLUS\r\nconfig.ignoreTags.iframe = undefined\r\nconfig.trustTags.iframe = true\r\nconfig.ignoreTags.embed = undefined\r\nconfig.trustTags.embed = true\r\n// #endif\r\n// #ifdef APP-PLUS-NVUE\r\nconfig.ignoreTags.source = undefined\r\nconfig.ignoreTags.style = undefined\r\n// #endif\r\n\r\n/**\r\n * @description 创建 map\r\n * @param {String} str 逗号分隔\r\n */\r\nfunction makeMap (str) {\r\n  const map = Object.create(null)\r\n  const list = str.split(',')\r\n  for (let i = list.length; i--;) {\r\n    map[list[i]] = true\r\n  }\r\n  return map\r\n}\r\n\r\n/**\r\n * @description 解码 html 实体\r\n * @param {String} str 要解码的字符串\r\n * @param {Boolean} amp 要不要解码 &amp;\r\n * @returns {String} 解码后的字符串\r\n */\r\nfunction decodeEntity (str, amp) {\r\n  let i = str.indexOf('&')\r\n  while (i !== -1) {\r\n    const j = str.indexOf(';', i + 3)\r\n    let code\r\n    if (j === -1) break\r\n    if (str[i + 1] === '#') {\r\n      // &#123; 形式的实体\r\n      code = parseInt((str[i + 2] === 'x' ? '0' : '') + str.substring(i + 2, j))\r\n      if (!isNaN(code)) {\r\n        str = str.substr(0, i) + String.fromCharCode(code) + str.substr(j + 1)\r\n      }\r\n    } else {\r\n      // &nbsp; 形式的实体\r\n      code = str.substring(i + 1, j)\r\n      if (config.entities[code] || (code === 'amp' && amp)) {\r\n        str = str.substr(0, i) + (config.entities[code] || '&') + str.substr(j + 1)\r\n      }\r\n    }\r\n    i = str.indexOf('&', i + 1)\r\n  }\r\n  return str\r\n}\r\n\r\n/**\r\n * @description 合并多个块级标签，加快长内容渲染\r\n * @param {Array} nodes 要合并的标签数组\r\n */\r\nfunction mergeNodes (nodes) {\r\n  let i = nodes.length - 1\r\n  for (let j = i; j >= -1; j--) {\r\n    if (j === -1 || nodes[j].c || !nodes[j].name || (nodes[j].name !== 'div' && nodes[j].name !== 'p' && nodes[j].name[0] !== 'h') || (nodes[j].attrs.style || '').includes('inline')) {\r\n      if (i - j >= 5) {\r\n        nodes.splice(j + 1, i - j, {\r\n          name: 'div',\r\n          attrs: {},\r\n          children: nodes.slice(j + 1, i + 1)\r\n        })\r\n      }\r\n      i = j - 1\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description html 解析器\r\n * @param {Object} vm 组件实例\r\n */\r\nfunction Parser (vm) {\r\n  this.options = vm || {}\r\n  this.tagStyle = Object.assign({}, config.tagStyle, this.options.tagStyle)\r\n  this.imgList = vm.imgList || []\r\n  this.imgList._unloadimgs = 0\r\n  this.plugins = vm.plugins || []\r\n  this.attrs = Object.create(null)\r\n  this.stack = []\r\n  this.nodes = []\r\n  this.pre = (this.options.containerStyle || '').includes('white-space') && this.options.containerStyle.includes('pre') ? 2 : 0\r\n}\r\n\r\n/**\r\n * @description 执行解析\r\n * @param {String} content 要解析的文本\r\n */\r\nParser.prototype.parse = function (content) {\r\n  // 插件处理\r\n  for (let i = this.plugins.length; i--;) {\r\n    if (this.plugins[i].onUpdate) {\r\n      content = this.plugins[i].onUpdate(content, config) || content\r\n    }\r\n  }\r\n\r\n  new Lexer(this).parse(content)\r\n  // 出栈未闭合的标签\r\n  while (this.stack.length) {\r\n    this.popNode()\r\n  }\r\n  if (this.nodes.length > 50) {\r\n    mergeNodes(this.nodes)\r\n  }\r\n  return this.nodes\r\n}\r\n\r\n/**\r\n * @description 将标签暴露出来（不被 rich-text 包含）\r\n */\r\nParser.prototype.expose = function () {\r\n  // #ifndef APP-PLUS-NVUE\r\n  for (let i = this.stack.length; i--;) {\r\n    const item = this.stack[i]\r\n    if (item.c || item.name === 'a' || item.name === 'video' || item.name === 'audio') return\r\n    item.c = 1\r\n  }\r\n  // #endif\r\n}\r\n\r\n/**\r\n * @description 处理插件\r\n * @param {Object} node 要处理的标签\r\n * @returns {Boolean} 是否要移除此标签\r\n */\r\nParser.prototype.hook = function (node) {\r\n  for (let i = this.plugins.length; i--;) {\r\n    if (this.plugins[i].onParse && this.plugins[i].onParse(node, this) === false) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 将链接拼接上主域名\r\n * @param {String} url 需要拼接的链接\r\n * @returns {String} 拼接后的链接\r\n */\r\nParser.prototype.getUrl = function (url) {\r\n  const domain = this.options.domain\r\n  if (url[0] === '/') {\r\n    if (url[1] === '/') {\r\n      // // 开头的补充协议名\r\n      url = (domain ? domain.split('://')[0] : 'http') + ':' + url\r\n    } else if (domain) {\r\n      // 否则补充整个域名\r\n      url = domain + url\r\n    } /* #ifdef APP-PLUS */ else {\r\n      url = plus.io.convertLocalFileSystemURL(url)\r\n    } /* #endif */\r\n  } else if (!url.includes('data:') && !url.includes('://')) {\r\n    if (domain) {\r\n      url = domain + '/' + url\r\n    } /* #ifdef APP-PLUS */ else {\r\n      url = plus.io.convertLocalFileSystemURL(url)\r\n    } /* #endif */\r\n  }\r\n  return url\r\n}\r\n\r\n/**\r\n * @description 解析样式表\r\n * @param {Object} node 标签\r\n * @returns {Object}\r\n */\r\nParser.prototype.parseStyle = function (node) {\r\n  const attrs = node.attrs\r\n  const list = (this.tagStyle[node.name] || '').split(';').concat((attrs.style || '').split(';'))\r\n  const styleObj = {}\r\n  let tmp = ''\r\n\r\n  if (attrs.id && !this.xml) {\r\n    // 暴露锚点\r\n    if (this.options.useAnchor) {\r\n      this.expose()\r\n    } else if (node.name !== 'img' && node.name !== 'a' && node.name !== 'video' && node.name !== 'audio') {\r\n      attrs.id = undefined\r\n    }\r\n  }\r\n\r\n  // 转换 width 和 height 属性\r\n  if (attrs.width) {\r\n    styleObj.width = parseFloat(attrs.width) + (attrs.width.includes('%') ? '%' : 'px')\r\n    attrs.width = undefined\r\n  }\r\n  if (attrs.height) {\r\n    styleObj.height = parseFloat(attrs.height) + (attrs.height.includes('%') ? '%' : 'px')\r\n    attrs.height = undefined\r\n  }\r\n\r\n  for (let i = 0, len = list.length; i < len; i++) {\r\n    const info = list[i].split(':')\r\n    if (info.length < 2) continue\r\n    const key = info.shift().trim().toLowerCase()\r\n    let value = info.join(':').trim()\r\n    if ((value[0] === '-' && value.lastIndexOf('-') > 0) || value.includes('safe')) {\r\n      // 兼容性的 css 不压缩\r\n      tmp += `;${key}:${value}`\r\n    } else if (!styleObj[key] || value.includes('import') || !styleObj[key].includes('import')) {\r\n      // 重复的样式进行覆盖\r\n      if (value.includes('url')) {\r\n        // 填充链接\r\n        let j = value.indexOf('(') + 1\r\n        if (j) {\r\n          while (value[j] === '\"' || value[j] === \"'\" || blankChar[value[j]]) {\r\n            j++\r\n          }\r\n          value = value.substr(0, j) + this.getUrl(value.substr(j))\r\n        }\r\n      } else if (value.includes('rpx')) {\r\n        // 转换 rpx（rich-text 内部不支持 rpx）\r\n        value = value.replace(/[0-9.]+\\s*rpx/g, $ => parseFloat($) * windowWidth / 750 + 'px')\r\n      }\r\n      styleObj[key] = value\r\n    }\r\n  }\r\n\r\n  node.attrs.style = tmp\r\n  return styleObj\r\n}\r\n\r\n/**\r\n * @description 解析到标签名\r\n * @param {String} name 标签名\r\n * @private\r\n */\r\nParser.prototype.onTagName = function (name) {\r\n  this.tagName = this.xml ? name : name.toLowerCase()\r\n  if (this.tagName === 'svg') {\r\n    this.xml = (this.xml || 0) + 1 // svg 标签内大小写敏感\r\n    config.ignoreTags.style = undefined // svg 标签内 style 可用\r\n  }\r\n}\r\n\r\n/**\r\n * @description 解析到属性名\r\n * @param {String} name 属性名\r\n * @private\r\n */\r\nParser.prototype.onAttrName = function (name) {\r\n  name = this.xml ? name : name.toLowerCase()\r\n  if (name.substr(0, 5) === 'data-') {\r\n    if (name === 'data-src' && !this.attrs.src) {\r\n      // data-src 自动转为 src\r\n      this.attrName = 'src'\r\n    } else if (this.tagName === 'img' || this.tagName === 'a') {\r\n      // a 和 img 标签保留 data- 的属性，可以在 imgtap 和 linktap 事件中使用\r\n      this.attrName = name\r\n    } else {\r\n      // 剩余的移除以减小大小\r\n      this.attrName = undefined\r\n    }\r\n  } else {\r\n    this.attrName = name\r\n    this.attrs[name] = 'T' // boolean 型属性缺省设置\r\n  }\r\n}\r\n\r\n/**\r\n * @description 解析到属性值\r\n * @param {String} val 属性值\r\n * @private\r\n */\r\nParser.prototype.onAttrVal = function (val) {\r\n  const name = this.attrName || ''\r\n  if (name === 'style' || name === 'href') {\r\n    // 部分属性进行实体解码\r\n    this.attrs[name] = decodeEntity(val, true)\r\n  } else if (name.includes('src')) {\r\n    // 拼接主域名\r\n    this.attrs[name] = this.getUrl(decodeEntity(val, true))\r\n  } else if (name) {\r\n    this.attrs[name] = val\r\n  }\r\n}\r\n\r\n/**\r\n * @description 解析到标签开始\r\n * @param {Boolean} selfClose 是否有自闭合标识 />\r\n * @private\r\n */\r\nParser.prototype.onOpenTag = function (selfClose) {\r\n  // 拼装 node\r\n  const node = Object.create(null)\r\n  node.name = this.tagName\r\n  node.attrs = this.attrs\r\n  // 避免因为自动 diff 使得 type 被设置为 null 导致部分内容不显示\r\n  if (this.options.nodes.length) {\r\n    node.type = 'node'\r\n  }\r\n  this.attrs = Object.create(null)\r\n\r\n  const attrs = node.attrs\r\n  const parent = this.stack[this.stack.length - 1]\r\n  const siblings = parent ? parent.children : this.nodes\r\n  const close = this.xml ? selfClose : config.voidTags[node.name]\r\n\r\n  // 替换标签名选择器\r\n  if (tagSelector[node.name]) {\r\n    attrs.class = tagSelector[node.name] + (attrs.class ? ' ' + attrs.class : '')\r\n  }\r\n\r\n  // 转换 embed 标签\r\n  if (node.name === 'embed') {\r\n    // #ifndef H5 || APP-PLUS\r\n    const src = attrs.src || ''\r\n    // 按照后缀名和 type 将 embed 转为 video 或 audio\r\n    if (src.includes('.mp4') || src.includes('.3gp') || src.includes('.m3u8') || (attrs.type || '').includes('video')) {\r\n      node.name = 'video'\r\n    } else if (src.includes('.mp3') || src.includes('.wav') || src.includes('.aac') || src.includes('.m4a') || (attrs.type || '').includes('audio')) {\r\n      node.name = 'audio'\r\n    }\r\n    if (attrs.autostart) {\r\n      attrs.autoplay = 'T'\r\n    }\r\n    attrs.controls = 'T'\r\n    // #endif\r\n    // #ifdef H5 || APP-PLUS\r\n    this.expose()\r\n    // #endif\r\n  }\r\n\r\n  // #ifndef APP-PLUS-NVUE\r\n  // 处理音视频\r\n  if (node.name === 'video' || node.name === 'audio') {\r\n    // 设置 id 以便获取 context\r\n    if (node.name === 'video' && !attrs.id) {\r\n      attrs.id = 'v' + idIndex++\r\n    }\r\n    // 没有设置 controls 也没有设置 autoplay 的自动设置 controls\r\n    if (!attrs.controls && !attrs.autoplay) {\r\n      attrs.controls = 'T'\r\n    }\r\n    // 用数组存储所有可用的 source\r\n    node.src = []\r\n    if (attrs.src) {\r\n      node.src.push(attrs.src)\r\n      attrs.src = undefined\r\n    }\r\n    this.expose()\r\n  }\r\n  // #endif\r\n\r\n  // 处理自闭合标签\r\n  if (close) {\r\n    if (!this.hook(node) || config.ignoreTags[node.name]) {\r\n      // 通过 base 标签设置主域名\r\n      if (node.name === 'base' && !this.options.domain) {\r\n        this.options.domain = attrs.href\r\n      } /* #ifndef APP-PLUS-NVUE */ else if (node.name === 'source' && parent && (parent.name === 'video' || parent.name === 'audio') && attrs.src) {\r\n        // 设置 source 标签（仅父节点为 video 或 audio 时有效）\r\n        parent.src.push(attrs.src)\r\n      } /* #endif */\r\n      return\r\n    }\r\n\r\n    // 解析 style\r\n    const styleObj = this.parseStyle(node)\r\n\r\n    // 处理图片\r\n    if (node.name === 'img') {\r\n      if (attrs.src) {\r\n        // 标记 webp\r\n        if (attrs.src.includes('webp')) {\r\n          node.webp = 'T'\r\n        }\r\n        // data url 图片如果没有设置 original-src 默认为不可预览的小图片\r\n        if (attrs.src.includes('data:') && !attrs['original-src']) {\r\n          attrs.ignore = 'T'\r\n        }\r\n        if (!attrs.ignore || node.webp || attrs.src.includes('cloud://')) {\r\n          for (let i = this.stack.length; i--;) {\r\n            const item = this.stack[i]\r\n            if (item.name === 'a') {\r\n              node.a = item.attrs\r\n            }\r\n            if (item.name === 'table' && !node.webp && !attrs.src.includes('cloud://')) {\r\n              if (!styleObj.display || styleObj.display.includes('inline')) {\r\n                node.t = 'inline-block'\r\n              } else {\r\n                node.t = styleObj.display\r\n              }\r\n              styleObj.display = undefined\r\n            }\r\n            // #ifndef H5 || APP-PLUS\r\n            const style = item.attrs.style || ''\r\n            if (style.includes('flex:') && !style.includes('flex:0') && !style.includes('flex: 0') && (!styleObj.width || parseInt(styleObj.width) > 100)) {\r\n              styleObj.width = '100% !important'\r\n              styleObj.height = ''\r\n              for (let j = i + 1; j < this.stack.length; j++) {\r\n                this.stack[j].attrs.style = (this.stack[j].attrs.style || '').replace('inline-', '')\r\n              }\r\n            } else if (style.includes('flex') && styleObj.width === '100%') {\r\n              for (let j = i + 1; j < this.stack.length; j++) {\r\n                const style = this.stack[j].attrs.style || ''\r\n                if (!style.includes(';width') && !style.includes(' width') && style.indexOf('width') !== 0) {\r\n                  styleObj.width = ''\r\n                  break\r\n                }\r\n              }\r\n            } else if (style.includes('inline-block')) {\r\n              if (styleObj.width && styleObj.width[styleObj.width.length - 1] === '%') {\r\n                item.attrs.style += ';max-width:' + styleObj.width\r\n                styleObj.width = ''\r\n              } else {\r\n                item.attrs.style += ';max-width:100%'\r\n              }\r\n            }\r\n            // #endif\r\n            item.c = 1\r\n          }\r\n          attrs.i = this.imgList.length.toString()\r\n          let src = attrs['original-src'] || attrs.src\r\n          // #ifndef H5 || MP-ALIPAY || APP-PLUS || MP-360\r\n          if (this.imgList.includes(src)) {\r\n            // 如果有重复的链接则对域名进行随机大小写变换避免预览时错位\r\n            let i = src.indexOf('://')\r\n            if (i !== -1) {\r\n              i += 3\r\n              let newSrc = src.substr(0, i)\r\n              for (; i < src.length; i++) {\r\n                if (src[i] === '/') break\r\n                newSrc += Math.random() > 0.5 ? src[i].toUpperCase() : src[i]\r\n              }\r\n              newSrc += src.substr(i)\r\n              src = newSrc\r\n            }\r\n          }\r\n          // #endif\r\n          this.imgList.push(src)\r\n          if (!node.t) {\r\n            this.imgList._unloadimgs += 1\r\n          }\r\n          // #ifdef H5 || APP-PLUS\r\n          if (this.options.lazyLoad) {\r\n            attrs['data-src'] = attrs.src\r\n            attrs.src = undefined\r\n          }\r\n          // #endif\r\n        }\r\n      }\r\n      if (styleObj.display === 'inline') {\r\n        styleObj.display = ''\r\n      }\r\n      // #ifndef APP-PLUS-NVUE\r\n      if (attrs.ignore) {\r\n        styleObj['max-width'] = styleObj['max-width'] || '100%'\r\n        attrs.style += ';-webkit-touch-callout:none'\r\n      }\r\n      // #endif\r\n      // 设置的宽度超出屏幕，为避免变形，高度转为自动\r\n      if (parseInt(styleObj.width) > windowWidth) {\r\n        styleObj.height = undefined\r\n      }\r\n      // 记录是否设置了宽高\r\n      if (!isNaN(parseInt(styleObj.width))) {\r\n        node.w = 'T'\r\n      }\r\n      if (!isNaN(parseInt(styleObj.height)) && (!styleObj.height.includes('%') || (parent && (parent.attrs.style || '').includes('height')))) {\r\n        node.h = 'T'\r\n      }\r\n    } else if (node.name === 'svg') {\r\n      siblings.push(node)\r\n      this.stack.push(node)\r\n      this.popNode()\r\n      return\r\n    }\r\n    for (const key in styleObj) {\r\n      if (styleObj[key]) {\r\n        attrs.style += `;${key}:${styleObj[key].replace(' !important', '')}`\r\n      }\r\n    }\r\n    attrs.style = attrs.style.substr(1) || undefined\r\n    // #ifdef (MP-WEIXIN || MP-QQ) && VUE3\r\n    if (!attrs.style) {\r\n      delete attrs.style\r\n    }\r\n    // #endif\r\n  } else {\r\n    if ((node.name === 'pre' || ((attrs.style || '').includes('white-space') && attrs.style.includes('pre'))) && this.pre !== 2) {\r\n      this.pre = node.pre = 1\r\n    }\r\n    node.children = []\r\n    this.stack.push(node)\r\n  }\r\n\r\n  // 加入节点树\r\n  siblings.push(node)\r\n}\r\n\r\n/**\r\n * @description 解析到标签结束\r\n * @param {String} name 标签名\r\n * @private\r\n */\r\nParser.prototype.onCloseTag = function (name) {\r\n  // 依次出栈到匹配为止\r\n  name = this.xml ? name : name.toLowerCase()\r\n  let i\r\n  for (i = this.stack.length; i--;) {\r\n    if (this.stack[i].name === name) break\r\n  }\r\n  if (i !== -1) {\r\n    while (this.stack.length > i) {\r\n      this.popNode()\r\n    }\r\n  } else if (name === 'p' || name === 'br') {\r\n    const siblings = this.stack.length ? this.stack[this.stack.length - 1].children : this.nodes\r\n    siblings.push({\r\n      name,\r\n      attrs: {\r\n        class: tagSelector[name] || '',\r\n        style: this.tagStyle[name] || ''\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 处理标签出栈\r\n * @private\r\n */\r\nParser.prototype.popNode = function () {\r\n  const node = this.stack.pop()\r\n  let attrs = node.attrs\r\n  const children = node.children\r\n  const parent = this.stack[this.stack.length - 1]\r\n  const siblings = parent ? parent.children : this.nodes\r\n\r\n  if (!this.hook(node) || config.ignoreTags[node.name]) {\r\n    // 获取标题\r\n    if (node.name === 'title' && children.length && children[0].type === 'text' && this.options.setTitle) {\r\n      uni.setNavigationBarTitle({\r\n        title: children[0].text\r\n      })\r\n    }\r\n    siblings.pop()\r\n    return\r\n  }\r\n\r\n  if (node.pre && this.pre !== 2) {\r\n    // 是否合并空白符标识\r\n    this.pre = node.pre = undefined\r\n    for (let i = this.stack.length; i--;) {\r\n      if (this.stack[i].pre) {\r\n        this.pre = 1\r\n      }\r\n    }\r\n  }\r\n\r\n  const styleObj = {}\r\n\r\n  // 转换 svg\r\n  if (node.name === 'svg') {\r\n    if (this.xml > 1) {\r\n      // 多层 svg 嵌套\r\n      this.xml--\r\n      return\r\n    }\r\n    // #ifdef APP-PLUS-NVUE\r\n    (function traversal (node) {\r\n      if (node.name) {\r\n        // 调整 svg 的大小写\r\n        node.name = config.svgDict[node.name] || node.name\r\n        for (const item in node.attrs) {\r\n          if (config.svgDict[item]) {\r\n            node.attrs[config.svgDict[item]] = node.attrs[item]\r\n            node.attrs[item] = undefined\r\n          }\r\n        }\r\n        for (let i = 0; i < (node.children || []).length; i++) {\r\n          traversal(node.children[i])\r\n        }\r\n      }\r\n    })(node)\r\n    // #endif\r\n    // #ifndef APP-PLUS-NVUE\r\n    let src = ''\r\n    const style = attrs.style\r\n    attrs.style = ''\r\n    attrs.xmlns = 'http://www.w3.org/2000/svg';\r\n    (function traversal (node) {\r\n      if (node.type === 'text') {\r\n        src += node.text\r\n        return\r\n      }\r\n      const name = config.svgDict[node.name] || node.name\r\n      src += '<' + name\r\n      for (const item in node.attrs) {\r\n        const val = node.attrs[item]\r\n        if (val) {\r\n          src += ` ${config.svgDict[item] || item}=\"${val}\"`\r\n        }\r\n      }\r\n      if (!node.children) {\r\n        src += '/>'\r\n      } else {\r\n        src += '>'\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          traversal(node.children[i])\r\n        }\r\n        src += '</' + name + '>'\r\n      }\r\n    })(node)\r\n    node.name = 'img'\r\n    node.attrs = {\r\n      src: 'data:image/svg+xml;utf8,' + src.replace(/#/g, '%23'),\r\n      style,\r\n      ignore: 'T'\r\n    }\r\n    node.children = undefined\r\n    // #endif\r\n    this.xml = false\r\n    config.ignoreTags.style = true\r\n    return\r\n  }\r\n\r\n  // #ifndef APP-PLUS-NVUE\r\n  // 转换 align 属性\r\n  if (attrs.align) {\r\n    if (node.name === 'table') {\r\n      if (attrs.align === 'center') {\r\n        styleObj['margin-inline-start'] = styleObj['margin-inline-end'] = 'auto'\r\n      } else {\r\n        styleObj.float = attrs.align\r\n      }\r\n    } else {\r\n      styleObj['text-align'] = attrs.align\r\n    }\r\n    attrs.align = undefined\r\n  }\r\n\r\n  // 转换 dir 属性\r\n  if (attrs.dir) {\r\n    styleObj.direction = attrs.dir\r\n    attrs.dir = undefined\r\n  }\r\n\r\n  // 转换 font 标签的属性\r\n  if (node.name === 'font') {\r\n    if (attrs.color) {\r\n      styleObj.color = attrs.color\r\n      attrs.color = undefined\r\n    }\r\n    if (attrs.face) {\r\n      styleObj['font-family'] = attrs.face\r\n      attrs.face = undefined\r\n    }\r\n    if (attrs.size) {\r\n      let size = parseInt(attrs.size)\r\n      if (!isNaN(size)) {\r\n        if (size < 1) {\r\n          size = 1\r\n        } else if (size > 7) {\r\n          size = 7\r\n        }\r\n        styleObj['font-size'] = ['x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', 'xxx-large'][size - 1]\r\n      }\r\n      attrs.size = undefined\r\n    }\r\n  }\r\n  // #endif\r\n\r\n  // 一些编辑器的自带 class\r\n  if ((attrs.class || '').includes('align-center')) {\r\n    styleObj['text-align'] = 'center'\r\n  }\r\n\r\n  Object.assign(styleObj, this.parseStyle(node))\r\n\r\n  if (node.name !== 'table' && parseInt(styleObj.width) > windowWidth) {\r\n    styleObj['max-width'] = '100%'\r\n    styleObj['box-sizing'] = 'border-box'\r\n  }\r\n\r\n  // #ifndef APP-PLUS-NVUE\r\n  if (config.blockTags[node.name]) {\r\n    node.name = 'div'\r\n  } else if (!config.trustTags[node.name] && !this.xml) {\r\n    // 未知标签转为 span，避免无法显示\r\n    node.name = 'span'\r\n  }\r\n\r\n  if (node.name === 'a' || node.name === 'ad'\r\n    // #ifdef H5 || APP-PLUS\r\n    || node.name === 'iframe' // eslint-disable-line\r\n    // #endif\r\n  ) {\r\n    this.expose()\r\n  } else if (node.name === 'video') {\r\n    if ((styleObj.height || '').includes('auto')) {\r\n      styleObj.height = undefined\r\n    }\r\n    /* #ifdef APP-PLUS */\r\n    let str = '<video style=\"width:100%;height:100%\"'\r\n    for (const item in attrs) {\r\n      if (attrs[item]) {\r\n        str += ' ' + item + '=\"' + attrs[item] + '\"'\r\n      }\r\n    }\r\n    if (this.options.pauseVideo) {\r\n      str += ' onplay=\"this.dispatchEvent(new CustomEvent(\\'vplay\\',{bubbles:!0}));for(var e=document.getElementsByTagName(\\'video\\'),t=0;t<e.length;t++)e[t]!=this&&e[t].pause()\"'\r\n    }\r\n    str += '>'\r\n    for (let i = 0; i < node.src.length; i++) {\r\n      str += '<source src=\"' + node.src[i] + '\">'\r\n    }\r\n    str += '</video>'\r\n    node.html = str\r\n    /* #endif */\r\n  } else if ((node.name === 'ul' || node.name === 'ol') && node.c) {\r\n    // 列表处理\r\n    const types = {\r\n      a: 'lower-alpha',\r\n      A: 'upper-alpha',\r\n      i: 'lower-roman',\r\n      I: 'upper-roman'\r\n    }\r\n    if (types[attrs.type]) {\r\n      attrs.style += ';list-style-type:' + types[attrs.type]\r\n      attrs.type = undefined\r\n    }\r\n    for (let i = children.length; i--;) {\r\n      if (children[i].name === 'li') {\r\n        children[i].c = 1\r\n      }\r\n    }\r\n  } else if (node.name === 'table') {\r\n    // 表格处理\r\n    // cellpadding、cellspacing、border 这几个常用表格属性需要通过转换实现\r\n    let padding = parseFloat(attrs.cellpadding)\r\n    let spacing = parseFloat(attrs.cellspacing)\r\n    const border = parseFloat(attrs.border)\r\n    const bordercolor = styleObj['border-color']\r\n    const borderstyle = styleObj['border-style']\r\n    if (node.c) {\r\n      // padding 和 spacing 默认 2\r\n      if (isNaN(padding)) {\r\n        padding = 2\r\n      }\r\n      if (isNaN(spacing)) {\r\n        spacing = 2\r\n      }\r\n    }\r\n    if (border) {\r\n      attrs.style += `;border:${border}px ${borderstyle || 'solid'} ${bordercolor || 'gray'}`\r\n    }\r\n    if (node.flag && node.c) {\r\n      // 有 colspan 或 rowspan 且含有链接的表格通过 grid 布局实现\r\n      styleObj.display = 'grid'\r\n      if (spacing) {\r\n        styleObj['grid-gap'] = spacing + 'px'\r\n        styleObj.padding = spacing + 'px'\r\n      } else if (border) {\r\n        // 无间隔的情况下避免边框重叠\r\n        attrs.style += ';border-left:0;border-top:0'\r\n      }\r\n\r\n      const width = [] // 表格的列宽\r\n      const trList = [] // tr 列表\r\n      const cells = [] // 保存新的单元格\r\n      const map = {}; // 被合并单元格占用的格子\r\n\r\n      (function traversal (nodes) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n          if (nodes[i].name === 'tr') {\r\n            trList.push(nodes[i])\r\n          } else {\r\n            traversal(nodes[i].children || [])\r\n          }\r\n        }\r\n      })(children)\r\n\r\n      for (let row = 1; row <= trList.length; row++) {\r\n        let col = 1\r\n        for (let j = 0; j < trList[row - 1].children.length; j++) {\r\n          const td = trList[row - 1].children[j]\r\n          if (td.name === 'td' || td.name === 'th') {\r\n            // 这个格子被上面的单元格占用，则列号++\r\n            while (map[row + '.' + col]) {\r\n              col++\r\n            }\r\n            let style = td.attrs.style || ''\r\n            let start = style.indexOf('width') ? style.indexOf(';width') : 0\r\n            // 提取出 td 的宽度\r\n            if (start !== -1) {\r\n              let end = style.indexOf(';', start + 6)\r\n              if (end === -1) {\r\n                end = style.length\r\n              }\r\n              if (!td.attrs.colspan) {\r\n                width[col] = style.substring(start ? start + 7 : 6, end)\r\n              }\r\n              style = style.substr(0, start) + style.substr(end)\r\n            }\r\n            // 设置竖直对齐\r\n            style += ';display:flex'\r\n            start = style.indexOf('vertical-align')\r\n            if (start !== -1) {\r\n              const val = style.substr(start + 15, 10)\r\n              if (val.includes('middle')) {\r\n                style += ';align-items:center'\r\n              } else if (val.includes('bottom')) {\r\n                style += ';align-items:flex-end'\r\n              }\r\n            } else {\r\n              style += ';align-items:center'\r\n            }\r\n            // 设置水平对齐\r\n            start = style.indexOf('text-align')\r\n            if (start !== -1) {\r\n              const val = style.substr(start + 11, 10)\r\n              if (val.includes('center')) {\r\n                style += ';justify-content: center'\r\n              } else if (val.includes('right')) {\r\n                style += ';justify-content: right'\r\n              }\r\n            }\r\n            style = (border ? `;border:${border}px ${borderstyle || 'solid'} ${bordercolor || 'gray'}` + (spacing ? '' : ';border-right:0;border-bottom:0') : '') + (padding ? `;padding:${padding}px` : '') + ';' + style\r\n            // 处理列合并\r\n            if (td.attrs.colspan) {\r\n              style += `;grid-column-start:${col};grid-column-end:${col + parseInt(td.attrs.colspan)}`\r\n              if (!td.attrs.rowspan) {\r\n                style += `;grid-row-start:${row};grid-row-end:${row + 1}`\r\n              }\r\n              col += parseInt(td.attrs.colspan) - 1\r\n            }\r\n            // 处理行合并\r\n            if (td.attrs.rowspan) {\r\n              style += `;grid-row-start:${row};grid-row-end:${row + parseInt(td.attrs.rowspan)}`\r\n              if (!td.attrs.colspan) {\r\n                style += `;grid-column-start:${col};grid-column-end:${col + 1}`\r\n              }\r\n              // 记录下方单元格被占用\r\n              for (let rowspan = 1; rowspan < td.attrs.rowspan; rowspan++) {\r\n                for (let colspan = 0; colspan < (td.attrs.colspan || 1); colspan++) {\r\n                  map[(row + rowspan) + '.' + (col - colspan)] = 1\r\n                }\r\n              }\r\n            }\r\n            if (style) {\r\n              td.attrs.style = style\r\n            }\r\n            cells.push(td)\r\n            col++\r\n          }\r\n        }\r\n        if (row === 1) {\r\n          let temp = ''\r\n          for (let i = 1; i < col; i++) {\r\n            temp += (width[i] ? width[i] : 'auto') + ' '\r\n          }\r\n          styleObj['grid-template-columns'] = temp\r\n        }\r\n      }\r\n      node.children = cells\r\n    } else {\r\n      // 没有使用合并单元格的表格通过 table 布局实现\r\n      if (node.c) {\r\n        styleObj.display = 'table'\r\n      }\r\n      if (!isNaN(spacing)) {\r\n        styleObj['border-spacing'] = spacing + 'px'\r\n      }\r\n      if (border || padding) {\r\n        // 遍历\r\n        (function traversal (nodes) {\r\n          for (let i = 0; i < nodes.length; i++) {\r\n            const td = nodes[i]\r\n            if (td.name === 'th' || td.name === 'td') {\r\n              if (border) {\r\n                td.attrs.style = `border:${border}px ${borderstyle || 'solid'} ${bordercolor || 'gray'};${td.attrs.style || ''}`\r\n              }\r\n              if (padding) {\r\n                td.attrs.style = `padding:${padding}px;${td.attrs.style || ''}`\r\n              }\r\n            } else if (td.children) {\r\n              traversal(td.children)\r\n            }\r\n          }\r\n        })(children)\r\n      }\r\n    }\r\n    // 给表格添加一个单独的横向滚动层\r\n    if (this.options.scrollTable && !(attrs.style || '').includes('inline')) {\r\n      const table = Object.assign({}, node)\r\n      node.name = 'div'\r\n      node.attrs = {\r\n        style: 'overflow:auto'\r\n      }\r\n      node.children = [table]\r\n      attrs = table.attrs\r\n    }\r\n  } else if ((node.name === 'td' || node.name === 'th') && (attrs.colspan || attrs.rowspan)) {\r\n    for (let i = this.stack.length; i--;) {\r\n      if (this.stack[i].name === 'table') {\r\n        this.stack[i].flag = 1 // 指示含有合并单元格\r\n        break\r\n      }\r\n    }\r\n  } else if (node.name === 'ruby') {\r\n    // 转换 ruby\r\n    node.name = 'span'\r\n    for (let i = 0; i < children.length - 1; i++) {\r\n      if (children[i].type === 'text' && children[i + 1].name === 'rt') {\r\n        children[i] = {\r\n          name: 'div',\r\n          attrs: {\r\n            style: 'display:inline-block;text-align:center'\r\n          },\r\n          children: [{\r\n            name: 'div',\r\n            attrs: {\r\n              style: 'font-size:50%;' + (children[i + 1].attrs.style || '')\r\n            },\r\n            children: children[i + 1].children\r\n          }, children[i]]\r\n        }\r\n        children.splice(i + 1, 1)\r\n      }\r\n    }\r\n  } else if (node.c) {\r\n    (function traversal (node) {\r\n      node.c = 2\r\n      for (let i = node.children.length; i--;) {\r\n        const child = node.children[i]\r\n        // #ifdef (MP-WEIXIN || MP-QQ || APP-PLUS || MP-360) && VUE3\r\n        if (child.name && (config.inlineTags[child.name] || ((child.attrs.style || '').includes('inline') && child.children)) && !child.c) {\r\n          traversal(child)\r\n        }\r\n        // #endif\r\n        if (!child.c || child.name === 'table') {\r\n          node.c = 1\r\n        }\r\n      }\r\n    })(node)\r\n  }\r\n\r\n  if ((styleObj.display || '').includes('flex') && !node.c) {\r\n    for (let i = children.length; i--;) {\r\n      const item = children[i]\r\n      if (item.f) {\r\n        item.attrs.style = (item.attrs.style || '') + item.f\r\n        item.f = undefined\r\n      }\r\n    }\r\n  }\r\n  // flex 布局时部分样式需要提取到 rich-text 外层\r\n  const flex = parent && ((parent.attrs.style || '').includes('flex') || (parent.attrs.style || '').includes('grid'))\r\n    // #ifdef MP-WEIXIN\r\n    // 检查基础库版本 virtualHost 是否可用\r\n    && !(node.c && wx.getNFCAdapter) // eslint-disable-line\r\n    // #endif\r\n    // #ifndef MP-WEIXIN || MP-QQ || MP-BAIDU || MP-TOUTIAO\r\n    && !node.c // eslint-disable-line\r\n  // #endif\r\n  if (flex) {\r\n    node.f = ';max-width:100%'\r\n  }\r\n\r\n  if (children.length >= 50 && node.c && !(styleObj.display || '').includes('flex')) {\r\n    mergeNodes(children)\r\n  }\r\n  // #endif\r\n\r\n  for (const key in styleObj) {\r\n    if (styleObj[key]) {\r\n      const val = `;${key}:${styleObj[key].replace(' !important', '')}`\r\n      /* #ifndef APP-PLUS-NVUE */\r\n      if (flex && ((key.includes('flex') && key !== 'flex-direction') || key === 'align-self' || key.includes('grid') || styleObj[key][0] === '-' || (key.includes('width') && val.includes('%')))) {\r\n        node.f += val\r\n        if (key === 'width') {\r\n          attrs.style += ';width:100%'\r\n        }\r\n      } else /* #endif */ {\r\n        attrs.style += val\r\n      }\r\n    }\r\n  }\r\n  attrs.style = attrs.style.substr(1) || undefined\r\n  // #ifdef (MP-WEIXIN || MP-QQ) && VUE3\r\n  for (const key in attrs) {\r\n    if (!attrs[key]) {\r\n      delete attrs[key]\r\n    }\r\n  }\r\n  // #endif\r\n}\r\n\r\n/**\r\n * @description 解析到文本\r\n * @param {String} text 文本内容\r\n */\r\nParser.prototype.onText = function (text) {\r\n  if (!this.pre) {\r\n    // 合并空白符\r\n    let trim = ''\r\n    let flag\r\n    for (let i = 0, len = text.length; i < len; i++) {\r\n      if (!blankChar[text[i]]) {\r\n        trim += text[i]\r\n      } else {\r\n        if (trim[trim.length - 1] !== ' ') {\r\n          trim += ' '\r\n        }\r\n        if (text[i] === '\\n' && !flag) {\r\n          flag = true\r\n        }\r\n      }\r\n    }\r\n    // 去除含有换行符的空串\r\n    if (trim === ' ') {\r\n      if (flag) return\r\n      // #ifdef VUE3\r\n      else {\r\n        const parent = this.stack[this.stack.length - 1]\r\n        if (parent && parent.name[0] === 't') return\r\n      }\r\n      // #endif\r\n    }\r\n    text = trim\r\n  }\r\n  const node = Object.create(null)\r\n  node.type = 'text'\r\n  // #ifdef (MP-BAIDU || MP-ALIPAY || MP-TOUTIAO) && VUE3\r\n  node.attrs = {}\r\n  // #endif\r\n  node.text = decodeEntity(text)\r\n  if (this.hook(node)) {\r\n    // #ifdef MP-WEIXIN\r\n    if (this.options.selectable === 'force' && system.includes('iOS') && !uni.canIUse('rich-text.user-select')) {\r\n      this.expose()\r\n    }\r\n    // #endif\r\n    const siblings = this.stack.length ? this.stack[this.stack.length - 1].children : this.nodes\r\n    siblings.push(node)\r\n  }\r\n}\r\n\r\n/**\r\n * @description html 词法分析器\r\n * @param {Object} handler 高层处理器\r\n */\r\nfunction Lexer (handler) {\r\n  this.handler = handler\r\n}\r\n\r\n/**\r\n * @description 执行解析\r\n * @param {String} content 要解析的文本\r\n */\r\nLexer.prototype.parse = function (content) {\r\n  this.content = content || ''\r\n  this.i = 0 // 标记解析位置\r\n  this.start = 0 // 标记一个单词的开始位置\r\n  this.state = this.text // 当前状态\r\n  for (let len = this.content.length; this.i !== -1 && this.i < len;) {\r\n    this.state()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 检查标签是否闭合\r\n * @param {String} method 如果闭合要进行的操作\r\n * @returns {Boolean} 是否闭合\r\n * @private\r\n */\r\nLexer.prototype.checkClose = function (method) {\r\n  const selfClose = this.content[this.i] === '/'\r\n  if (this.content[this.i] === '>' || (selfClose && this.content[this.i + 1] === '>')) {\r\n    if (method) {\r\n      this.handler[method](this.content.substring(this.start, this.i))\r\n    }\r\n    this.i += selfClose ? 2 : 1\r\n    this.start = this.i\r\n    this.handler.onOpenTag(selfClose)\r\n    if (this.handler.tagName === 'script') {\r\n      this.i = this.content.indexOf('</', this.i)\r\n      if (this.i !== -1) {\r\n        this.i += 2\r\n        this.start = this.i\r\n      }\r\n      this.state = this.endTag\r\n    } else {\r\n      this.state = this.text\r\n    }\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 文本状态\r\n * @private\r\n */\r\nLexer.prototype.text = function () {\r\n  this.i = this.content.indexOf('<', this.i) // 查找最近的标签\r\n  if (this.i === -1) {\r\n    // 没有标签了\r\n    if (this.start < this.content.length) {\r\n      this.handler.onText(this.content.substring(this.start, this.content.length))\r\n    }\r\n    return\r\n  }\r\n  const c = this.content[this.i + 1]\r\n  if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\r\n    // 标签开头\r\n    if (this.start !== this.i) {\r\n      this.handler.onText(this.content.substring(this.start, this.i))\r\n    }\r\n    this.start = ++this.i\r\n    this.state = this.tagName\r\n  } else if (c === '/' || c === '!' || c === '?') {\r\n    if (this.start !== this.i) {\r\n      this.handler.onText(this.content.substring(this.start, this.i))\r\n    }\r\n    const next = this.content[this.i + 2]\r\n    if (c === '/' && ((next >= 'a' && next <= 'z') || (next >= 'A' && next <= 'Z'))) {\r\n      // 标签结尾\r\n      this.i += 2\r\n      this.start = this.i\r\n      this.state = this.endTag\r\n      return\r\n    }\r\n    // 处理注释\r\n    let end = '-->'\r\n    if (c !== '!' || this.content[this.i + 2] !== '-' || this.content[this.i + 3] !== '-') {\r\n      end = '>'\r\n    }\r\n    this.i = this.content.indexOf(end, this.i)\r\n    if (this.i !== -1) {\r\n      this.i += end.length\r\n      this.start = this.i\r\n    }\r\n  } else {\r\n    this.i++\r\n  }\r\n}\r\n\r\n/**\r\n * @description 标签名状态\r\n * @private\r\n */\r\nLexer.prototype.tagName = function () {\r\n  if (blankChar[this.content[this.i]]) {\r\n    // 解析到标签名\r\n    this.handler.onTagName(this.content.substring(this.start, this.i))\r\n    while (blankChar[this.content[++this.i]]);\r\n    if (this.i < this.content.length && !this.checkClose()) {\r\n      this.start = this.i\r\n      this.state = this.attrName\r\n    }\r\n  } else if (!this.checkClose('onTagName')) {\r\n    this.i++\r\n  }\r\n}\r\n\r\n/**\r\n * @description 属性名状态\r\n * @private\r\n */\r\nLexer.prototype.attrName = function () {\r\n  let c = this.content[this.i]\r\n  if (blankChar[c] || c === '=') {\r\n    // 解析到属性名\r\n    this.handler.onAttrName(this.content.substring(this.start, this.i))\r\n    let needVal = c === '='\r\n    const len = this.content.length\r\n    while (++this.i < len) {\r\n      c = this.content[this.i]\r\n      if (!blankChar[c]) {\r\n        if (this.checkClose()) return\r\n        if (needVal) {\r\n          // 等号后遇到第一个非空字符\r\n          this.start = this.i\r\n          this.state = this.attrVal\r\n          return\r\n        }\r\n        if (this.content[this.i] === '=') {\r\n          needVal = true\r\n        } else {\r\n          this.start = this.i\r\n          this.state = this.attrName\r\n          return\r\n        }\r\n      }\r\n    }\r\n  } else if (!this.checkClose('onAttrName')) {\r\n    this.i++\r\n  }\r\n}\r\n\r\n/**\r\n * @description 属性值状态\r\n * @private\r\n */\r\nLexer.prototype.attrVal = function () {\r\n  const c = this.content[this.i]\r\n  const len = this.content.length\r\n  if (c === '\"' || c === \"'\") {\r\n    // 有冒号的属性\r\n    this.start = ++this.i\r\n    this.i = this.content.indexOf(c, this.i)\r\n    if (this.i === -1) return\r\n    this.handler.onAttrVal(this.content.substring(this.start, this.i))\r\n  } else {\r\n    // 没有冒号的属性\r\n    for (; this.i < len; this.i++) {\r\n      if (blankChar[this.content[this.i]]) {\r\n        this.handler.onAttrVal(this.content.substring(this.start, this.i))\r\n        break\r\n      } else if (this.checkClose('onAttrVal')) return\r\n    }\r\n  }\r\n  while (blankChar[this.content[++this.i]]);\r\n  if (this.i < len && !this.checkClose()) {\r\n    this.start = this.i\r\n    this.state = this.attrName\r\n  }\r\n}\r\n\r\n/**\r\n * @description 结束标签状态\r\n * @returns {String} 结束的标签名\r\n * @private\r\n */\r\nLexer.prototype.endTag = function () {\r\n  const c = this.content[this.i]\r\n  if (blankChar[c] || c === '>' || c === '/') {\r\n    this.handler.onCloseTag(this.content.substring(this.start, this.i))\r\n    if (c !== '>') {\r\n      this.i = this.content.indexOf('>', this.i)\r\n      if (this.i === -1) return\r\n    }\r\n    this.start = ++this.i\r\n    this.state = this.text\r\n  } else {\r\n    this.i++\r\n  }\r\n}\r\n\r\nexport default Parser\r\n"],"names":["config","makeMap","tagSelector","windowWidth","system","uni","blankChar","idIndex","str","map","list","i","decodeEntity","amp","j","code","mergeNodes","nodes","Parser","vm","content","Lexer","item","node","url","domain","attrs","styleObj","tmp","len","info","key","value","$","name","val","selfClose","parent","siblings","close","src","style","newSrc","children","traversal","size","types","padding","spacing","border","bordercolor","borderstyle","width","trList","cells","row","col","td","start","end","rowspan","colspan","temp","table","child","flex","wx","text","trim","flag","handler","method","c","next","needVal"],"mappings":"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"}